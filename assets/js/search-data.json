{
  
    
        "post0": {
            "title": "Fibo",
            "content": "Orginial code . /* * Creator: Nighthawk Coding Society * Mini Lab Name: Fibonacci sequence, featuring a Stream Algorithm * */ import java.util.ArrayList; import java.util.HashMap; import java.util.stream.Stream; /* Objective will require changing to abstract class with one or more abstract methods below */ public class Fibo { String name; // name or title of method int size; // nth sequence int hashID; // counter for hashIDs in hash map ArrayList&lt;Long&gt; list; // captures current Fibonacci sequence HashMap&lt;Integer, Object&gt; hash; // captures each sequence leading to final result /* Zero parameter constructor uses Telescoping technique to allow setting of the required value nth @param: none */ public Fibo() { this(10); // telescope to avoid code duplication, using default as 20 } /* Construct the nth fibonacci number @param: nth number, the value is constrained to 92 because of overflow in a long */ public Fibo(int nth) { this.size = nth; this.list = new ArrayList&lt;&gt;(); this.hashID = 0; this.hash = new HashMap&lt;&gt;(); //initialize fibonacci and time mvc this.init(); } /* This Method should be &quot;abstract&quot; Leave method as protected, as it is only authorized to extender of the class Make new class that extends and defines init() Inside references within this class would change from this to super Repeat process using for, while, recursion */ protected void init() { this.name = &quot;Stream&quot;; Stream.iterate(new long[]{0, 1}, f -&gt; new long[]{f[1], f[0] + f[1]}) .limit(this.size) .forEach(f -&gt; this.setData(f[0]) ); } /* Number is added to fibonacci sequence, current state of &quot;list&quot; is added to hash for hashID &quot;num&quot; */ public void setData(long num) { list.add(num); hash.put(this.hashID++, list.clone()); } /* Custom Getter to return last element in fibonacci sequence */ public long getNth() { return list.get(this.size - 1); } /* Custom Getter to return last fibonacci sequence in HashMap */ public Object getNthSeq(int i) { return hash.get(i); } /* Console/Terminal supported print method */ public void print() { System.out.println(&quot;Init method = &quot; + this.name); System.out.println(&quot;fibonacci Number &quot; + this.size + &quot; = &quot; + this.getNth()); System.out.println(&quot;fibonacci List = &quot; + this.list); System.out.println(&quot;fibonacci Hashmap = &quot; + this.hash); for (int i=0 ; i&lt;this.size; i++ ) { System.out.println(&quot;fibonacci Sequence &quot; + (i+1) + &quot; = &quot; + this.getNthSeq(i)); } } /* Tester class method. If this becomes abstract you will not be able to test it directly ... Change this method to call &quot;main&quot; class of each of the extended classes */ static public void main(String[] args) { Fibo fib = new Fibo(); fib.print(); } } Fibo.main(null); . Init method = Stream fibonacci Number 10 = 34 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] . For Loop . public class FiboFor extends Fibo { public FiboFor() { super(10); // This parameter that is passed in the super that is used for the amount of repetitions } public FiboFor(int nth) { super(nth); // take the value from the super and uses it throughout the loop } @Override protected void init() { super.name = &quot;For Extends&quot;; // name at the beginning long limit = this.size; // creates a limit and setting it to ten // for loops are likely the most common iteration structure, all the looping facts are in one line for (long[] f = new long[]{0, 1}; limit-- &gt; 0; f = new long[]{f[1], f[0] + f[1]}) this.setData(f[0]); } /* Tester class method. If this becomes abstract you will not be able to test it directly ... Change this method to call &quot;main&quot; class of each of the extended classes */ static public void main(String[] args) { FiboFor fib = new FiboFor(); fib.print(); } } FiboFor.main(null); . Init method = For Extends fibonacci Number 10 = 34 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] . While Loop . public class FiboFor extends Fibo { public FiboFor() { super(10); } public FiboFor(int nth) { super(nth); } /* Abstract Polymorphic &quot;init()&quot; method using While */ @Override protected void init() { super.name = &quot;While&quot;; // longer and more error prone &quot;while&quot; syntax is often best performer in this small scale test long limit = super.size; long[] f = new long[]{0, 1}; while (limit-- &gt; 0) { super.setData(f[0]); f = new long[]{f[1], f[0] + f[1]}; } } /* Class method &quot;main&quot; with purpose of testing FibWhile */ static public void main(String[] args) { FiboFor fib = new FiboFor(); fib.print(); } } FiboFor.main(null); . Init method = While fibonacci Number 10 = 34 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] . Recursion Loops . public class FiboFor extends Fibo { public FiboFor() { super(10); } public FiboFor(int nth) { super(nth); } /* Abstract Polymorphic &quot;init()&quot; method using While */ @Override protected void init() { //setup for recursion super.name = &quot;Recursion&quot;; long limit = super.size; long[] f = new long[]{0, 1}; initRecurse(limit,f); // recursion is redirected } /* Recursive methods contains an escape, in this &quot;base condition&quot; with a limit VERY IMPORTANT... recursion requires pre-decrement, post-decrement will not occur until unstacking */ private void initRecurse(long limit, long[] f) { if (limit == 0) return; //exit condition super.setData(f[0]); // observe this syntax and function, many think of recursion as another way to do iteration initRecurse(--limit, new long[]{f[1], f[0] + f[1]}); } /* Class method &quot;main&quot; with purpose of testing FibWhile */ static public void main(String[] args) { FiboFor fib = new FiboFor(); fib.print(); } } FiboFor.main(null); . Init method = Recursion fibonacci Number 10 = 34 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] .",
            "url": "https://reem57.github.io/blog_new/jupyter/2022/11/01/Fibo.html",
            "relUrl": "/jupyter/2022/11/01/Fibo.html",
            "date": " • Nov 1, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Unit 1 Homework",
            "content": "Final Grade Calculator (calculates necessary score for the final): . First takes in boolean of whether final is in a seperate category or tests cateogry | If final is in seperate category take in current grade | take in % of grade that is final | take in the desired grade | output % score needed on the final | . | If final is in a &quot;tests&quot; category take in current grade | take in % of grade that is tests category | take in current % in tests category | take in CURRENT amount of points in tests category (here integer can be used i suppose) | take in amount of points that the final is (here integer can be used i suppose) | take in the desired grade | output # of points needed on the final All of these should be taken using user input (Scanner). Example Input: false 20 93.0 90.0 Example Output (would be correct if contains a 78): Is the final in the tests category? What is your current grade? How much percent of your grade is the final? What is your desired grade? You need a 78.0 on the test | . | . import java.util.Scanner; // Import the Scanner class int separate = 0; double g = 96; // Current Class Grade double percentFinal = 30; double finalScore = 0; int t = 80; // test percent of the grade int p = 300; // point in the test category int f = 100; // points that the final is worth double a = 92; // percent of points scored within the test category double w = 90; // wanted grade Scanner finalQ = new Scanner(System.in); // Create a Scanner object System.out.println(&quot;Is the final in its own category? n 1 - True n 2 - False&quot;); separate = finalQ.nextInt(); if(separate == 1){ System.out.println(&quot;What is your current grade?&quot;); currentGrade = finalQ.nextDouble(); System.out.println(&quot;How much percent of your grade is the final?&quot;); percentFinal = finalQ.nextDouble(); System.out.println(&quot;What is your desired grade?&quot;); goalGrade = finalQ.nextDouble(); finalScore = (goalGrade -currentGrade * (100.0- percentFinal)/100) / (percentFinal/100); System.out.print(finalScore); } else if(separate == 2){ System.out.print(&quot;What is your current grade? &quot;); g = finalQ.nextDouble(); System.out.println(g); System.out.print(&quot;How much is your test category worth? &quot;); t = finalQ.nextInt(); System.out.println(t); System.out.print(&quot;How many point are in the test category? &quot;); p = finalQ.nextInt(); System.out.println(p); System.out.print(&quot;How many point is the final? &quot;); f = finalQ.nextInt(); System.out.println(f); System.out.print(&quot;What is your grade in the test category? &quot;); a = finalQ.nextDouble(); System.out.println(a); System.out.print(&quot;What is your desired grade? &quot;); w = finalQ.nextDouble(); System.out.println(w); finalScore = ((0.01*a*f*t)-(f*g)+(f*w)-(g*p)+(p*w))/t; System.out.print(&quot;You need to get at least a &quot; + String.format(&quot;%.2f&quot;, (finalScore/f)*100) + &quot;% on you final to get a &quot; + w); } else{ System.out.print(&quot;Unexpected choice, try again.&quot;); } . Is the final in its own category? 1 - True 2 - False What is your current grade? 22.0 How much is your test category worth? 22 How many point are in the test category? 22 How many point is the final? 22 What is your grade in the test category? 22.0 What is your desired grade? 22.0 You need to get at least a 22.00% on you final to get a 22.0 .",
            "url": "https://reem57.github.io/blog_new/jupyter/2022/10/26/Unit1.html",
            "relUrl": "/jupyter/2022/10/26/Unit1.html",
            "date": " • Oct 26, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Week 7",
            "content": "Peer Grade: 2.7/3.0 . He had all the requirements for the week including the Arrays ans List and the API. . Week 7 Requirements . Insight | Arrays and Lists | API | .",
            "url": "https://reem57.github.io/blog_new/markdown/2022/10/12/week7.html",
            "relUrl": "/markdown/2022/10/12/week7.html",
            "date": " • Oct 12, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Arrays and Lists",
            "content": "import java.util.ArrayList; public class Main{ public static void main(String[] args) { ArrayList&lt;String&gt; colors = new ArrayList&lt;String&gt;(); colors.add(&quot;Turquoise&quot;); colors.add(&quot;Orange&quot;); colors.add(&quot;Yellow&quot;); colors.add(&quot;Red&quot;); colors.add(&quot;Green&quot;); colors.add(&quot;Violet&quot;); colors.add(&quot;Pink&quot;); colors.add(&quot;Grey&quot;); colors.add(&quot;Black&quot;); colors.add(&quot;Blue&quot;); colors.add(&quot;Purple&quot;); colors.add(&quot;Gold&quot;); colors.add(&quot;Silver&quot;); colors.add(&quot;White&quot;); colors.add(&quot;Brown&quot;); colors.add(&quot;Maroon&quot;); for(int i=0; colors.size() &gt; 1; i++){ Scanner favoriteColor = new Scanner(System.in); // Create a Scanner object System.out.print(&quot;Pick the better one &quot;); System.out.print(colors.get(0)); System.out.print(&quot; or &quot;); System.out.print(colors.get(1)); System.out.print(&quot; (1-2): &quot;); int option = favoriteColor.nextInt(); // storing the option as the variable System.out.println(option); String name = &quot;&quot;; //Creating a string variable for the name of the image if(option == 1){ System.out.println(&quot;You picked the color: &quot; + colors.get(0)); colors.remove(1); } else if(option == 2){ System.out.println(&quot;You picked the color: &quot; + colors.get(1)); colors.remove(0); } else{ System.out.println(&quot;Unexpected choice, try again.&quot;); } } // checking for favorite color System.out.println(&quot;Your favorite color is: &quot; + colors.get(0)); if(colors.get(0).equals(&quot;Blue&quot;)){ System.out.println(&quot;Thats also my favorite color!&quot;); } colors.clear(); } public static void favoriteColor(String[] args){ } } Main.main(null); . Pick the better one Turquoise or Orange (1-2): 1 You picked the color: Turquoise Pick the better one Turquoise or Yellow (1-2): 1 You picked the color: Turquoise Pick the better one Turquoise or Red (1-2): 1 You picked the color: Turquoise Pick the better one Turquoise or Green (1-2): 1 You picked the color: Turquoise Pick the better one Turquoise or Violet (1-2): 1 You picked the color: Turquoise Pick the better one Turquoise or Pink (1-2): 1 You picked the color: Turquoise Pick the better one Turquoise or Grey (1-2): 1 You picked the color: Turquoise Pick the better one Turquoise or Black (1-2): 1 You picked the color: Turquoise Pick the better one Turquoise or Blue (1-2): 2 You picked the color: Blue Pick the better one Blue or Purple (1-2): 1 You picked the color: Blue Pick the better one Blue or Gold (1-2): 1 You picked the color: Blue Pick the better one Blue or Silver (1-2): 1 You picked the color: Blue Pick the better one Blue or White (1-2): 1 You picked the color: Blue Pick the better one Blue or Brown (1-2): 1 You picked the color: Blue Pick the better one Blue or Maroon (1-2): 1 You picked the color: Blue Your favorite color is: Blue Thats also my favorite color! .",
            "url": "https://reem57.github.io/blog_new/jupyter/2022/10/06/ArrayList.html",
            "relUrl": "/jupyter/2022/10/06/ArrayList.html",
            "date": " • Oct 6, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Week 6",
            "content": "Peer Grade: 2.7+/3.0 . He had all the requirements for the week including the png to gif converter, the four scales, and the ascii conversion. In addition, he also added more code to convert the . Week 6 Requirements . Insight | Arrays and Images | .",
            "url": "https://reem57.github.io/blog_new/markdown/2022/10/02/week6.html",
            "relUrl": "/markdown/2022/10/02/week6.html",
            "date": " • Oct 2, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Arrays and Images",
            "content": "PNG to Gif . import javax.imageio.ImageIO; import java.io.File; import java.io.IOException; import java.awt.image.BufferedImage; import java.util.Scanner; // Import the Scanner class public class ImageIOTest { // making the user input private static String inputName() { Scanner imageName = new Scanner(System.in); // Create a Scanner object System.out.print(&quot;Enter an option number (1-3): &quot;); int option = imageName.nextInt(); // storing the option as the variable System.out.println(option); String name = &quot;&quot;; //Creating a string variable for the name of the image if(option == 1){ name = &quot;MonaLisa&quot;; } else if(option == 2){ name = &quot;AmongUs&quot;; } else if(option == 3){ name = &quot;Spiderman&quot;; } else{ System.out.print(&quot;Unexpected choice, try again.&quot;); } System.out.println(&quot;You chose the option: &quot; + name); return name; } public static void main( String[] args ){ BufferedImage img = null; // buffer type try { // Name of file and directories String name = inputName(); String in = &quot;images/&quot;; String out = &quot;images/tmp/&quot;; // Either use URL or File for reading image using ImageIO File imageFile = new File(in + name + &quot;.png&quot;); img = ImageIO.read(imageFile); // set buffer of image data // ImageIO Image write to gif in Java // Documentation https://docs.oracle.com/javase/tutorial/2d/images/index.html ImageIO.write(img, &quot;gif&quot;, new File(out + name + &quot;.gif&quot;) ); // write buffer to gif } catch (IOException e) { e.printStackTrace(); } System.out.println(&quot;The gif has been created successfully&quot;); } } ImageIOTest.main(null); . Enter an option number (1-3): 1 You chose the option: MonaLisa The gif has been created successfully . Scales and Ascii . import java.awt.Color; import java.awt.image.BufferedImage; import java.awt.Image; import java.awt.Graphics2D; import java.io.File; import java.io.FileWriter; import java.io.IOException; import java.io.PrintWriter; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; import javax.imageio.stream.ImageOutputStream; import javax.imageio.stream.ImageInputStream; import javax.imageio.metadata.IIOMetadata; import javax.imageio.IIOImage; import javax.imageio.ImageIO; import javax.imageio.ImageWriteParam; import javax.imageio.ImageWriter; import javax.imageio.ImageReader; import javax.imageio.ImageTypeSpecifier; public class Pics { private final String inDir = &quot;images/&quot;; // location of images private final String outDir = &quot;images/tmp/&quot;; // location of created files private final String grayDir = &quot;images/tmp/grey/&quot;; private final String greenDir = &quot;images/tmp/green/&quot;; private final String blueDir = &quot;images/tmp/blue/&quot;; private final String redDir = &quot;images/tmp/red&quot;; private String inFile; private String resizedFile; private String blueFile; private String greenFile; private String redFile; private String greyFile; private String asciiFile; private String ext; // extension of file private long bytes; private int width; private int height; // Constructor obtains attributes of picture public Pics(String name, String ext) { this.ext = ext; this.inFile = this.inDir + name + &quot;.&quot; + ext; this.resizedFile = this.outDir + name + &quot;.&quot; + ext; this.asciiFile = this.outDir + name + &quot;.txt&quot;; this.setStats(); this.blueFile = this.outDir + name + &quot;BlueScale.&quot; + ext; this.greenFile = this.outDir + name + &quot;GreenScale.&quot; + ext; this.redFile = this.outDir + name + &quot;RedScale.&quot; + ext; this.greyFile = this.outDir + name + &quot;GreyScale.&quot; + ext; } // An image contains metadata, namely size, width, and height public void setStats() { BufferedImage img; try { Path path = Paths.get(this.inFile); this.bytes = Files.size(path); img = ImageIO.read(new File(this.inFile)); this.width = img.getWidth(); this.height = img.getHeight(); } catch (IOException e) { } } // Console print of data public void printStats(String msg) { System.out.println(msg + &quot;: &quot; + this.bytes + &quot; &quot; + this.width + &quot;x&quot; + this.height + &quot; &quot; + this.inFile); } // Convert scaled image into buffered image public static BufferedImage convertToBufferedImage(Image img) { // Create a buffered image with transparency BufferedImage bi = new BufferedImage( img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB); // magic? Graphics2D graphics2D = bi.createGraphics(); graphics2D.drawImage(img, 0, 0, null); graphics2D.dispose(); return bi; } // Scale or reduce to &quot;scale&quot; percentage provided public void resize(int scale) { BufferedImage img = null; Image resizedImg = null; int width = (int) (this.width * (scale/100.0) + 0.5); int height = (int) (this.height * (scale/100.0) + 0.5); try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data // create a new BufferedImage for drawing resizedImg = img.getScaledInstance(width, height, Image.SCALE_SMOOTH); } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(resizedImg), this.ext, new File(resizedFile)); } catch (IOException e) { return; } this.inFile = this.resizedFile; // use scaled file vs original file in Class this.setStats(); } // convert every pixel to an ascii character (ratio does not seem correct) public void convertToAscii() { BufferedImage img = null; PrintWriter asciiPrt = null; FileWriter asciiWrt = null; try { File file = new File(this.asciiFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } try { asciiPrt = new PrintWriter(asciiWrt = new FileWriter(this.asciiFile, true)); } catch (IOException e) { System.out.println(&quot;ASCII out file create error: &quot; + e); } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { } for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color col = new Color(img.getRGB(j, i)); double pixVal = (0.01+(0.3*(col.getRed()/255.0)))+(0.01+(0.59*(col.getGreen()/255.0))) + (0.01+(0.11*(col.getBlue()/255.0))); try { asciiPrt.print(asciiChar(pixVal)); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } try { asciiPrt.println(&quot;&quot;); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } } public void greyscale() { BufferedImage img = null; BufferedImage greyImg = null; try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data greyImg = img; // create a new BufferedImage for drawing for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color co = new Color(img.getRGB(j, i)); int red = (int) (co.getRed() * 0.299); int green = (int) (co.getGreen() * 0.587); int blue = (int) (co.getBlue() * 0.114); int total = red + green + blue; Color newColor = new Color(total, total, total); greyImg.setRGB(j, i, newColor.getRGB()); } } } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(greyImg), this.ext, new File(greyFile)); } catch (IOException e) { return; } this.inFile = this.greyFile; // use scaled file vs original file in Class this.setStats(); } public void redscale() { BufferedImage img = null; BufferedImage redImg = null; try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data redImg = img; // create a new BufferedImage for drawing for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color co = new Color(img.getRGB(j, i)); int red = (int) co.getRed(); int green = 0; int blue = 0; Color newColor = new Color(red, green, blue); redImg.setRGB(j, i, newColor.getRGB()); } } } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(redImg), this.ext, new File(redFile)); } catch (IOException e) { return; } this.inFile = this.redFile; // use scaled file vs original file in Class this.setStats(); } public void greenscale() { BufferedImage img = null; BufferedImage greenImg = null; try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data greenImg = img; // create a new BufferedImage for drawing for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color co = new Color(img.getRGB(j, i)); int red = 0; int green = (int) co.getGreen(); int blue = 0; Color newColor = new Color(red, green, blue); greenImg.setRGB(j, i, newColor.getRGB()); } } } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(greenImg), this.ext, new File(greenFile)); } catch (IOException e) { return; } this.inFile = this.greenFile; // use scaled file vs original file in Class this.setStats(); } public void bluescale() { BufferedImage img = null; BufferedImage blueImg = null; try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data blueImg = img; // create a new BufferedImage for drawing for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color co = new Color(img.getRGB(j, i)); int red = (int) (co.getRed() * 0.299); int green = (int) (co.getGreen() * 0.587); int blue = (int) (co.getBlue() * 0.114); int total = red + green + blue; Color newColor = new Color(0, 0, total); blueImg.setRGB(j, i, newColor.getRGB()); } } } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(blueImg), this.ext, new File(blueFile)); } catch (IOException e) { return; } this.inFile = this.blueFile; // use scaled file vs original file in Class this.setStats(); } //Finding the closest value to g then return its opposite index in the list private static int getClosetNumberOfTarget(double[] arrayList, double value) { double current = Double.MAX_VALUE; int index = 0; for (int i = 0; i &lt; arrayList.length; i++) { if (Math.abs(value - arrayList[i]) &lt; current) { current = Math.abs(value - arrayList[i]); index = i; } } return arrayList.length - index; } // conversion table, there may be better out there ie https://www.billmongan.com/Ursinus-CS173-Fall2020/Labs/ASCIIArt public String asciiChar(double g) { // The lookup table for all of the chars that can be used String GRAYSCALE_CHARS = &quot;@#BW8gMN6&amp;9RQqE0d$DbpmOa5AH2GZeKPS3X4U%kwohFVyzIsCu{xfn}tJTi17c=jYL?l[]v&lt;&gt;+|)r(/ *_!;^~ &quot;:,-&#39;.`&quot;; // The lookup table of the brightness of each char, from 0 to 1 double[] GRAYSCALE_VALUES = {0, 0.07863, 0.08205, 0.1316, 0.1453, 0.147, 0.1504, 0.1641, 0.1761, 0.1761, 0.1778, 0.2017, 0.2154, 0.2274, 0.2274, 0.2291, 0.2427, 0.2598, 0.2615, 0.2684, 0.2752, 0.2769, 0.2889, 0.2923, 0.294, 0.2974, 0.3026, 0.3077, 0.3077, 0.3094, 0.3162, 0.3197, 0.3333, 0.3333, 0.3385, 0.3538, 0.3607, 0.3795, 0.3846, 0.4017, 0.4034, 0.4068, 0.4291, 0.4325, 0.4444, 0.4598, 0.4632, 0.4667, 0.4752, 0.4855, 0.5077, 0.5128, 0.5128, 0.5128, 0.5179, 0.5214, 0.5231, 0.535, 0.535, 0.5368, 0.5385, 0.5436, 0.5624, 0.5624, 0.5624, 0.5641, 0.5778, 0.5829, 0.5846, 0.5863, 0.5863, 0.5915, 0.6017, 0.6068, 0.641, 0.6581, 0.6889, 0.694, 0.6974, 0.7333, 0.7333, 0.7402, 0.7675, 0.7744, 0.7863, 0.8068, 0.8342, 0.8427, 0.8598, 0.894, 0.947, 0.959, 0.9675, 1}; //find the closest value in the grayscale_value find its length in the list and find the compared length to the chars String str = &quot; &quot;; if(getClosetNumberOfTarget(GRAYSCALE_VALUES, g) == 94){ str = &quot; &quot;; } else{ str = &quot;&quot; + GRAYSCALE_CHARS.charAt(getClosetNumberOfTarget(GRAYSCALE_VALUES, g)) + GRAYSCALE_CHARS.charAt(getClosetNumberOfTarget(GRAYSCALE_VALUES, g))+ GRAYSCALE_CHARS.charAt(getClosetNumberOfTarget(GRAYSCALE_VALUES, g)); } // String str = &quot; &quot;; // if (g &gt;= 240) { // str = &quot; &quot;; // } else if (g &gt;= 210) { // str = &quot;.&quot;; // } else if (g &gt;= 190) { // str = &quot;*&quot;; // } else if (g &gt;= 170) { // str = &quot;+&quot;; // } else if (g &gt;= 120) { // str = &quot;^&quot;; // } else if (g &gt;= 110) { // str = &quot;&amp;&quot;; // } else if (g &gt;= 80) { // str = &quot;8&quot;; // } else if (g &gt;= 60) { // str = &quot;#&quot;; // } else { // str = &quot;@&quot;; // } return str; } // tester/driver public static void main(String[] args) throws IOException { Pics monaLisa = new Pics(&quot;MonaLisa&quot;, &quot;png&quot;); monaLisa.printStats(&quot;Original&quot;); monaLisa.resize(33); monaLisa.printStats(&quot;Scaled&quot;); monaLisa.convertToAscii(); //monaLisa.bluescale(); //monaLisa.redscale(); //monaLisa.greenscale(); //monaLisa.greyscale(); Pics spiderman = new Pics(&quot;Spiderman&quot;, &quot;png&quot;); spiderman.printStats(&quot;Original&quot;); spiderman.resize(33); spiderman.printStats(&quot;Scaled&quot;); spiderman.convertToAscii(); //spiderman.bluescale(); //spiderman.redscale(); //spiderman.greenscale(); //spiderman.greyscale(); Pics amongUs = new Pics(&quot;AmongUs&quot;, &quot;png&quot;); amongUs.printStats(&quot;Original&quot;); amongUs.resize(33); amongUs.printStats(&quot;Scaled&quot;); amongUs.convertToAscii(); //amongUs.bluescale(); //amongUs.redscale(); //amongUs.greenscale(); //amongUs.greyscale(); } } Pics.main(null); . Original: 711262 512x765 images/MonaLisa.png Scaled: 106762 169x252 images/tmp/MonaLisa.png Original: 207325 820x726 images/Spiderman.png Scaled: 65495 271x240 images/tmp/Spiderman.png Original: 453797 900x506 images/AmongUs.png Scaled: 93374 297x167 images/tmp/AmongUs.png . Image Results . Grey Scale Red Scale Green Scale Blue Scale . | | | | . | | | | . | | | | .",
            "url": "https://reem57.github.io/blog_new/jupyter/2022/10/01/images.html",
            "relUrl": "/jupyter/2022/10/01/images.html",
            "date": " • Oct 1, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Week 5",
            "content": "Peer Grade: 2.7/3.0 . He had all the requirements for the week including the Fibo (which extends the init file) and JavaScript tutorial. In addition, he had also had the PBL Brainstorm for the group. . Week 5 Requirements . Insight | Fibo | PBL Brainstorm | Scrum Board | .",
            "url": "https://reem57.github.io/blog_new/markdown/2022/09/27/week5.html",
            "relUrl": "/markdown/2022/09/27/week5.html",
            "date": " • Sep 27, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Fibo",
            "content": "Orginial code . /* * Creator: Nighthawk Coding Society * Mini Lab Name: Fibonacci sequence, featuring a Stream Algorithm * */ import java.util.ArrayList; import java.util.HashMap; import java.util.stream.Stream; /* Objective will require changing to abstract class with one or more abstract methods below */ public class Fibo { String name; // name or title of method int size; // nth sequence int hashID; // counter for hashIDs in hash map ArrayList&lt;Long&gt; list; // captures current Fibonacci sequence HashMap&lt;Integer, Object&gt; hash; // captures each sequence leading to final result /* Zero parameter constructor uses Telescoping technique to allow setting of the required value nth @param: none */ public Fibo() { this(10); // telescope to avoid code duplication, using default as 20 } /* Construct the nth fibonacci number @param: nth number, the value is constrained to 92 because of overflow in a long */ public Fibo(int nth) { this.size = nth; this.list = new ArrayList&lt;&gt;(); this.hashID = 0; this.hash = new HashMap&lt;&gt;(); //initialize fibonacci and time mvc this.init(); } /* This Method should be &quot;abstract&quot; Leave method as protected, as it is only authorized to extender of the class Make new class that extends and defines init() Inside references within this class would change from this to super Repeat process using for, while, recursion */ protected void init() { this.name = &quot;Stream&quot;; Stream.iterate(new long[]{0, 1}, f -&gt; new long[]{f[1], f[0] + f[1]}) .limit(this.size) .forEach(f -&gt; this.setData(f[0]) ); } /* Number is added to fibonacci sequence, current state of &quot;list&quot; is added to hash for hashID &quot;num&quot; */ public void setData(long num) { list.add(num); hash.put(this.hashID++, list.clone()); } /* Custom Getter to return last element in fibonacci sequence */ public long getNth() { return list.get(this.size - 1); } /* Custom Getter to return last fibonacci sequence in HashMap */ public Object getNthSeq(int i) { return hash.get(i); } /* Console/Terminal supported print method */ public void print() { System.out.println(&quot;Init method = &quot; + this.name); System.out.println(&quot;fibonacci Number &quot; + this.size + &quot; = &quot; + this.getNth()); System.out.println(&quot;fibonacci List = &quot; + this.list); System.out.println(&quot;fibonacci Hashmap = &quot; + this.hash); for (int i=0 ; i&lt;this.size; i++ ) { System.out.println(&quot;fibonacci Sequence &quot; + (i+1) + &quot; = &quot; + this.getNthSeq(i)); } } /* Tester class method. If this becomes abstract you will not be able to test it directly ... Change this method to call &quot;main&quot; class of each of the extended classes */ static public void main(String[] args) { Fibo fib = new Fibo(); fib.print(); } } Fibo.main(null); . Init method = Stream fibonacci Number 10 = 34 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] . For Loop . public class FiboFor extends Fibo { public FiboFor() { super(10); // This parameter that is passed in the super that is used for the amount of repetitions } public FiboFor(int nth) { super(nth); // take the value from the super and uses it throughout the loop } @Override protected void init() { super.name = &quot;For Extends&quot;; // name at the beginning long limit = this.size; // creates a limit and setting it to ten // for loops are likely the most common iteration structure, all the looping facts are in one line for (long[] f = new long[]{0, 1}; limit-- &gt; 0; f = new long[]{f[1], f[0] + f[1]}) this.setData(f[0]); } /* Tester class method. If this becomes abstract you will not be able to test it directly ... Change this method to call &quot;main&quot; class of each of the extended classes */ static public void main(String[] args) { FiboFor fib = new FiboFor(); fib.print(); } } FiboFor.main(null); . Init method = For Extends fibonacci Number 10 = 34 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] . While Loop . public class FiboFor extends Fibo { public FiboFor() { super(10); } public FiboFor(int nth) { super(nth); } /* Abstract Polymorphic &quot;init()&quot; method using While */ @Override protected void init() { super.name = &quot;While&quot;; // longer and more error prone &quot;while&quot; syntax is often best performer in this small scale test long limit = super.size; long[] f = new long[]{0, 1}; while (limit-- &gt; 0) { super.setData(f[0]); f = new long[]{f[1], f[0] + f[1]}; } } /* Class method &quot;main&quot; with purpose of testing FibWhile */ static public void main(String[] args) { FiboFor fib = new FiboFor(); fib.print(); } } FiboFor.main(null); . Init method = While fibonacci Number 10 = 34 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] . Recursion Loops . public class FiboFor extends Fibo { public FiboFor() { super(10); } public FiboFor(int nth) { super(nth); } /* Abstract Polymorphic &quot;init()&quot; method using While */ @Override protected void init() { //setup for recursion super.name = &quot;Recursion&quot;; long limit = super.size; long[] f = new long[]{0, 1}; initRecurse(limit,f); // recursion is redirected } /* Recursive methods contains an escape, in this &quot;base condition&quot; with a limit VERY IMPORTANT... recursion requires pre-decrement, post-decrement will not occur until unstacking */ private void initRecurse(long limit, long[] f) { if (limit == 0) return; //exit condition super.setData(f[0]); // observe this syntax and function, many think of recursion as another way to do iteration initRecurse(--limit, new long[]{f[1], f[0] + f[1]}); } /* Class method &quot;main&quot; with purpose of testing FibWhile */ static public void main(String[] args) { FiboFor fib = new FiboFor(); fib.print(); } } FiboFor.main(null); . Init method = Recursion fibonacci Number 10 = 34 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] .",
            "url": "https://reem57.github.io/blog_new/jupyter/2022/09/26/Fibo.html",
            "relUrl": "/jupyter/2022/09/26/Fibo.html",
            "date": " • Sep 26, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Week 4",
            "content": "Peer Grade: 2.7+/3.0 . He had all the requirements for the week including the Monkey 2D Array and the 2018 FRQ question 1. In addition, he had the 3D solar system made from Tristan. . Week 4 Requirements . Insight | FRQ 1 | 2D Array | Scrum Board | .",
            "url": "https://reem57.github.io/blog_new/markdown/2022/09/20/week4.html",
            "relUrl": "/markdown/2022/09/20/week4.html",
            "date": " • Sep 20, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "FRQ 1",
            "content": "Part a - Question: . Write the simulate method, which simulates the frog attempting to hop in a straight line to a goal from the frog&#39;s starting position of 0 within a maximum number of hops. The method returns true if the frog successfully reached the goal within the maximum number of hops; otherwise, the method returns false. The FrogSimulation class provides a method called hopDistance that returns an integer representing the distance (positive or negative) to be moved when the frog hops. A positive distance represents a move toward the goal. A negative distance represents a move away from the goal. The returned distance may vary from call to call. Each time the frog hops, its position is adjusted by the value returned by a call to the hopDistance method. . The frog hops until one of the following conditions becomes true: . The frog has reached or passed the goal. | The frog has reached a negative position. | The frog has taken the maximum number of hops without reaching the goal. | . The following example shows a declaration of a FrogSimulation object for which the goal distance is 24 inches and the maximum number of hops is 5. The table shows some possible outcomes of calling the simulate method. . FrogSimulation sim = new FrogSimulation(24, 5); . . Complete method simulate below. You must use hopDistance appropriately to receive full credit. . Simulates a frog attempting to reach the goal as described in part (a). | Returns true if the frog successfully reached or passed the goal during the simulation; | false otherwise. | . public boolean simulate(){ int position = 0; for (int count = 0; count &lt; maxHops; count++){ position += hopDistance(); if (position &gt;= goalDistance){ return true; } else if (position &lt; 0){ return false; } } return false; } . Part B - Question: . Write the runSimulations method, which performs a given number of simulations and returns the proportion of simulations in which the frog successfully reached or passed the goal. For example, if the parameter passed to runSimulations is 400, and 100 of the 400 simulate method calls returned true, then the runSimulations method should return 0.25. Complete method runSimulations below. Assume that simulate works as specified, regardless of what you wrote in part (a). You must use simulate appropriately to receive full credit. . Runs num simulations and returns the proportion of simulations in which the frog | successfully reached or passed the goal. | Precondition: num &gt; 0 | . public double runSimulations(int num){ int countSuccess = 0; for (int count = 0; count &lt; num; count++){ if(simulate()){ countSuccess++; } } return (double)countSuccess / num; } .",
            "url": "https://reem57.github.io/blog_new/jupyter/2022/09/20/FRQ1.html",
            "relUrl": "/jupyter/2022/09/20/FRQ1.html",
            "date": " • Sep 20, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "PBL Brainstorm",
            "content": "Structure Ideas . build a website with a calendar thats interactive | it changes based on the login | if the login is registered as a teacher, then it would let you change the calendar for all your students | if the login is registered as a student, then it would let you change only the things on your calendar | The login changes most of the features on the website making it easier for teachers and students to interact | . Include photoboard: . use the photoboard as the starting point of our group | Change the backend from javascript to java | Make the webpage more CS focused to fit the class | Redesign the page to a more formal background and layout | . Team Roles . Team Role Team Member . Scrum Master | Akhil | . DevOps | Tristan | . Frontend Developer | Saathvika | . Backend Developer | Re’em | .",
            "url": "https://reem57.github.io/blog_new/jupyter/2022/09/19/PBL.html",
            "relUrl": "/jupyter/2022/09/19/PBL.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "2D Arrays",
            "content": "Original . /* * Creator: Nighthawk Coding Society * Mini Lab Name: Hello Series,featuring Monkey Jumpers */ /** * Class for Monkeys: a 2D array of Monkeys * As well as method to print the Poem */ class MonkeyLoop { //The area between class definition and the 1st method is where we keep data for object in Java String [][] monkeys; //2D Array: AP CSA Unit 8: 2D array of strings //2D array is like a grid [x][y] // or like a spreadsheet [row][column] /** * Constructor initializes a 2D array of Monkeys */ public MonkeyLoop() { //Storing Data in 2D arrays monkeys = new String[][]{ //2D array above is just a name, &quot;new&quot; makes a container (&quot;object&quot;) //Monkey 0 { &quot;ʕง ͠° ͟ل͜ ͡°)ʔ &quot;, //[0][0] eyes &quot; _⏄_/ &quot;, //[0][1] chin &quot; --0-- &quot;, //[0][2] body &quot; ⎛ ⎞ &quot; //[0][3] legs }, //Monkey 1 { &quot; ʕ༼ ◕_◕ ༽ʔ&quot;, //[1][0] &quot; _⎏_/ &quot;, &quot; ++1++ &quot;, &quot; ⌋ ⌊ &quot; }, //Monkey 2 { &quot; ʕ(▀ ⍡ ▀)ʔ&quot;, //[2][0] &quot; _⎐_/ &quot;, &quot; &lt;-2-&gt; &quot;, &quot; 〈 〉 &quot; }, //Monkey 3 { &quot;ʕ ͡° ͜ʖ ° ͡ʔ&quot;, //[3][0] &quot; _⍾_/ &quot;, &quot; ==3== &quot;, &quot; _/ _ &quot; }, //Monkey 4 { &quot; (◕‿◕✿) &quot;, //[4][0] &quot; _⍾_/ &quot;, //[4][1] &quot; ==4== &quot;, //[4][2] &quot; _/ _ &quot; //[4][3] }, }; } /** * Loop and print monkeys in array * ... repeat until you reach zero ... */ public void printPoem() { //begin the poem System.out.println(); System.out.println(&quot;Monkey Jumpers Poem in Java Loopy&quot;); // monkeys (non-primitive) defined in constructor knows its length int monkeyCount = monkeys.length; for (int i = monkeyCount; i &gt;= 1; i--) //loops through 2D array length backwards { //this print statement shows current count of Monkeys // concatenation (+) of the loop variable and string to form a countdown message System.out.println(i + &quot; little monkeys jumping on the bed...&quot;); //how many separate parts are there in a monkey monkey? for (int row = 0; row &lt; monkeyCount; row++) { //cycles through &quot;cells&quot; of 2d array /*cycles through columns to print each monkey part by part, will eventually print entire column*/ for (int col = 0; col &lt; monkeys[row].length; col++) { // prints specific part of the monkey from the column System.out.print(monkeys[row][col] + &quot; &quot;); //this is new line between separate parts System.out.println(); } //this new line gives separation between stanza of poem System.out.println(); } //countdown for poem, decrementing monkeyCount variable by 1 monkeyCount -= 1; } //out of all the loops, prints finishing messages System.out.println(&quot;No more monkeys jumping on the bed&quot;); System.out.println(&quot;0000000000000000000000000000000000&quot;); System.out.println(&quot; THE END &quot;); } /** * A Java Driver/Test method that is the entry point for execution */ public static void main(String[] args) { new MonkeyLoop().printPoem(); //a new monkey list and output in one step } } MonkeyLoop.main(null); . Monkey Jumpers Poem in Java Loopy 5 little monkeys jumping on the bed... ʕง ͠° ͟ل͜ ͡°)ʔ _⏄_/ --0-- ⎛ ⎞ ʕ༼ ◕_◕ ༽ʔ _⎏_/ ++1++ ⌋ ⌊ ʕ(▀ ⍡ ▀)ʔ _⎐_/ &lt;-2-&gt; 〈 〉 ʕ ͡° ͜ʖ ° ͡ʔ _⍾_/ ==3== _/ _ (◕‿◕✿) _⍾_/ ==4== _/ _ 4 little monkeys jumping on the bed... ʕง ͠° ͟ل͜ ͡°)ʔ _⏄_/ --0-- ⎛ ⎞ ʕ༼ ◕_◕ ༽ʔ _⎏_/ ++1++ ⌋ ⌊ ʕ(▀ ⍡ ▀)ʔ _⎐_/ &lt;-2-&gt; 〈 〉 ʕ ͡° ͜ʖ ° ͡ʔ _⍾_/ ==3== _/ _ 3 little monkeys jumping on the bed... ʕง ͠° ͟ل͜ ͡°)ʔ _⏄_/ --0-- ⎛ ⎞ ʕ༼ ◕_◕ ༽ʔ _⎏_/ ++1++ ⌋ ⌊ ʕ(▀ ⍡ ▀)ʔ _⎐_/ &lt;-2-&gt; 〈 〉 2 little monkeys jumping on the bed... ʕง ͠° ͟ل͜ ͡°)ʔ _⏄_/ --0-- ⎛ ⎞ ʕ༼ ◕_◕ ༽ʔ _⎏_/ ++1++ ⌋ ⌊ 1 little monkeys jumping on the bed... ʕง ͠° ͟ل͜ ͡°)ʔ _⏄_/ --0-- ⎛ ⎞ No more monkeys jumping on the bed 0000000000000000000000000000000000 THE END . Horizontal - hack . /* * Creator: Nighthawk Coding Society * Mini Lab Name: Hello Series,featuring Monkey Jumpers */ /** * Class for Monkeys: a 2D array of Monkeys * As well as method to print the Poem */ class MonkeyLoop { //The area between class definition and the 1st method is where we keep data for object in Java String [][] monkeys; //2D Array: AP CSA Unit 8: 2D array of strings //2D array is like a grid [x][y] // or like a spreadsheet [row][column] /** * Constructor initializes a 2D array of Monkeys */ public MonkeyLoop() { //Storing Data in 2D arrays monkeys = new String[][]{ //2D array above is just a name, &quot;new&quot; makes a container (&quot;object&quot;) //Monkey 0 { &quot;ʕง ͠° ͟ل͜ ͡°)ʔ &quot;, //[0][0] eyes &quot; _⏄_/ &quot;, //[0][1] chin &quot; --0-- &quot;, //[0][2] body &quot; ⎛ ⎞ &quot; //[0][3] legs }, //Monkey 1 { &quot; ʕ༼ ◕_◕ ༽ʔ&quot;, //[1][0] &quot; _⎏_/ &quot;, &quot; ++1++ &quot;, &quot; ⌋ ⌊ &quot; }, //Monkey 2 { &quot; ʕ(▀ ⍡ ▀)ʔ&quot;, //[2][0] &quot; _⎐_/ &quot;, &quot; &lt;-2-&gt; &quot;, &quot; 〈 〉 &quot; }, //Monkey 3 { &quot;ʕ ͡° ͜ʖ ° ͡ʔ&quot;, //[3][0] &quot; _⍾_/ &quot;, &quot; ==3== &quot;, &quot; _/ _ &quot; }, //Monkey 4 { &quot; (◕‿◕✿) &quot;, //[4][0] &quot; _⍾_/ &quot;, //[4][1] &quot; ==4== &quot;, //[4][2] &quot; _/ _ &quot; //[4][3] }, }; } /** * Loop and print monkeys in array * ... repeat until you reach zero ... */ public void printPoem() { //begin the poem System.out.println(); System.out.println(&quot;Monkey Jumpers Poem in Java Loopy&quot;); // monkeys (non-primitive) defined in constructor knows its length int monkeyCount = monkeys.length; for (int i = monkeyCount; i &gt;= 1; i--) //loops through 2D array length backwards { //this print statement shows current count of Monkeys // concatenation (+) of the loop variable and string to form a countdown message System.out.println(i + &quot; little monkeys jumping on the bed...&quot;); //how many separate parts are there in a monkey monkey? for (int col = 0; col &lt; monkeys[col].length; col++) { //cycles through &quot;cells&quot; of 2d array /*cycles through columns to print each monkey part by part, will eventually print entire column*/ for (int row = 0; row &lt; monkeyCount; row++) { // prints specific part of the monkey from the column System.out.print(monkeys[row][col]); //this is new line between separate parts System.out.print(&quot; t&quot;); } //this new line gives separation between stanza of poem System.out.println(); } System.out.println(&quot;One fell off and bumped his head&quot;); System.out.println(&quot;Mama called the Doctor and the Doctor said:&quot;); System.out.println(&quot;NO MORE MONKEYS JUMPING ON THE BED&quot;); System.out.println(); //countdown for poem, decrementing monkeyCount variable by 1 monkeyCount -= 1; } //out of all the loops, prints finishing messages System.out.println(&quot;No more monkeys jumping on the bed&quot;); System.out.println(&quot;0000000000000000000000000000000000&quot;); System.out.println(&quot; THE END &quot;); } /** * A Java Driver/Test method that is the entry point for execution */ public static void main(String[] args) { new MonkeyLoop().printPoem(); //a new monkey list and output in one step } } MonkeyLoop.main(null); . Monkey Jumpers Poem in Java Loopy 5 little monkeys jumping on the bed... ʕง ͠° ͟ل͜ ͡°)ʔ ʕ༼ ◕_◕ ༽ʔ ʕ(▀ ⍡ ▀)ʔ ʕ ͡° ͜ʖ ° ͡ʔ (◕‿◕✿) _⏄_/ _⎏_/ _⎐_/ _⍾_/ _⍾_/ --0-- ++1++ &lt;-2-&gt; ==3== ==4== ⎛ ⎞ ⌋ ⌊ 〈 〉 _/ _ _/ _ One fell off and bumped his head Mama called the Doctor and the Doctor said: NO MORE MONKEYS JUMPING ON THE BED 4 little monkeys jumping on the bed... ʕง ͠° ͟ل͜ ͡°)ʔ ʕ༼ ◕_◕ ༽ʔ ʕ(▀ ⍡ ▀)ʔ ʕ ͡° ͜ʖ ° ͡ʔ _⏄_/ _⎏_/ _⎐_/ _⍾_/ --0-- ++1++ &lt;-2-&gt; ==3== ⎛ ⎞ ⌋ ⌊ 〈 〉 _/ _ One fell off and bumped his head Mama called the Doctor and the Doctor said: NO MORE MONKEYS JUMPING ON THE BED 3 little monkeys jumping on the bed... ʕง ͠° ͟ل͜ ͡°)ʔ ʕ༼ ◕_◕ ༽ʔ ʕ(▀ ⍡ ▀)ʔ _⏄_/ _⎏_/ _⎐_/ --0-- ++1++ &lt;-2-&gt; ⎛ ⎞ ⌋ ⌊ 〈 〉 One fell off and bumped his head Mama called the Doctor and the Doctor said: NO MORE MONKEYS JUMPING ON THE BED 2 little monkeys jumping on the bed... ʕง ͠° ͟ل͜ ͡°)ʔ ʕ༼ ◕_◕ ༽ʔ _⏄_/ _⎏_/ --0-- ++1++ ⎛ ⎞ ⌋ ⌊ One fell off and bumped his head Mama called the Doctor and the Doctor said: NO MORE MONKEYS JUMPING ON THE BED 1 little monkeys jumping on the bed... ʕง ͠° ͟ل͜ ͡°)ʔ _⏄_/ --0-- ⎛ ⎞ One fell off and bumped his head Mama called the Doctor and the Doctor said: NO MORE MONKEYS JUMPING ON THE BED No more monkeys jumping on the bed 0000000000000000000000000000000000 THE END .",
            "url": "https://reem57.github.io/blog_new/jupyter/2022/09/15/monkeys.html",
            "relUrl": "/jupyter/2022/09/15/monkeys.html",
            "date": " • Sep 15, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Week 3",
            "content": "Peer Grade: 2.7/3.0 . He had all the requirements for the week including the Conditionals and Boolean Expressions blog, The deployed website and the resume/CV. . Week 3 Requirements . Insight | Deployed Website | Reem Ben Ishai CV | Conditionals and Boolean Expressions | .",
            "url": "https://reem57.github.io/blog_new/markdown/2022/09/12/week3.html",
            "relUrl": "/markdown/2022/09/12/week3.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Conditionals and Boolean Expressions Blog",
            "content": "If, If else, If elseif else statements . if(1==1){ //checking if 1 is equal to one System.out.println(&quot;one is equal to one&quot;); //prints out the message if that is true } . one is equal to one . var num = 2; //creating a random variable (num) and assigning a value to it if (num == 1){ //checking to see if that value of the variable is equal to one System.out.println(&quot;num is equal to one&quot;); //if num is equal to one we want to print it out } else{ //if the if statement is NOT true proceed with this System.out.println(&quot;num is not equal to one&quot;); // if the value does not equal to one we want to also print that out } . num is not equal to one . var num = 15; //creating a random variable (num) and assigning a value to it if(num &lt; 10){ //checking to see if num is less than 10 System.out.println(&quot;num is less than 10&quot;); //print result } else if(num &gt; 10){ //checking to see if num is greater than 10 System.out.println(&quot;num is greater than 10&quot;); //print result } else{ //If both of the previous statements are false then the number has to equal to 10 System.out.println(&quot;num is equal to 10&quot;); //print result } . num is greater than 10 . switch-case . int randomNum = (int)(Math.random() * 6); // random number between 0 to 5 if(randomNum == 0){ //Checking if the random number is 0 System.out.println(&quot;The number is: 0&quot;); //printing out the random number if its 0 } else if(randomNum == 1){ //Checking if the random number is 1 System.out.println(&quot;The number is: 1&quot;); //printing out the random number if its 1 } else if(randomNum == 2){ //Checking if the random number is 2 System.out.println(&quot;The number is: 2&quot;); //printing out the random number if its 2 } else if(randomNum == 3){ //Checking if the random number is 3 System.out.println(&quot;The number is: 3&quot;); //printing out the random number if its 3 } else if(randomNum == 4){ //Checking if the random number is 4 System.out.println(&quot;The number is: 4&quot;); //printing out the random number if its 4 } else{ //if everything else is false then the number is five System.out.println(&quot;The number is: 5&quot;); //printing out the random number if its 5 } . The number is: 1 . lets put this into a different form called switch-case-otherwise . int randomNum = (int)(Math.random() * 6); // random number between 0 to 5 switch (randomNum) { case 0: //Checks if randomNum is equal to zero System.out.println(&quot;The number is: 0&quot;); //printing out the random number if its 0 break; //stops the code case 1: //Checks if randomNum is equal to one System.out.println(&quot;The number is: 1&quot;); //printing out the random number if its 1 break; //stops the code case 2: //Checks if randomNum is equal to two System.out.println(&quot;The number is: 2&quot;); //printing out the random number if its 2 break; //stops the code case 3: //Checks if randomNum is equal to three System.out.println(&quot;The number is: 3&quot;); //printing out the random number if its 3 break; //stops the code case 4: //Checks if randomNum is equal to four System.out.println(&quot;The number is: 4&quot;); //printing out the random number if its 3 break; //stops the code default: //If none of them are true then proceed System.out.println(&quot;The number is: 5&quot;); //printing out the random number if its 3 break; //stops the code } . The number is: 3 . De Morgan&#39;s law . Description: . The complement of the union of the two sets A and B will be equal to the intersection of A&#39; (complement of A) and B&#39; (complement of B). In simpler terms, the opposite of a and b is equal to the opposite of a or the opposite of b. The opposite of a or b is equal to the opposite of a and the opposite of b. . . var a = true; //creating a variable with a value of true var b = false; //creating a variable with a value of false if (!(a&amp;b) == !a|!b){ // checks if De Morgan&#39;s law is correct System.out.println(&quot;De Morgan&#39;s law is true&quot;); //prints out the result } . De Morgan&#39;s law is true . var a = true; //creating a variable with a value of true var b = false; //creating a variable with a value of false if (!(a|b) == !a&amp;!b){ // checks if De Morgan&#39;s law is correct System.out.println(&quot;De Morgan&#39;s law is true&quot;); //prints out the result } . De Morgan&#39;s law is true . var a = true; //creating a variable with a value of true var b = false; //creating a variable with a value of false if (!(a&amp;b) == !a&amp;!b){ // checks if De Morgan&#39;s law is correct System.out.println(&quot;De Morgan&#39;s law is not true&quot;); //prints out the result } else{ // if not true then proceed System.out.println(&quot;De Morgan&#39;s law is true&quot;); //prints out the result } . De Morgan&#39;s law is true .",
            "url": "https://reem57.github.io/blog_new/jupyter/2022/09/12/conditionals.html",
            "relUrl": "/jupyter/2022/09/12/conditionals.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Reem Ben Ishai CV",
            "content": "Aspiration . My passion is computer programming and algorithms. I am a hardworking and fast-learning student looking for an internship opportunity in a real-world working environment. I would love to contribute to the team&#39;s success by demonstrating and developing my skills. . Education . Junior (11th grade) in Del Norte High School | GPA - 4.19 ### 10th Grade Classes: AP Computer Science - College Credit | AP Calculus AB - College Credit | AP Chemistry - College Credit | Foreign Languages in a private high school - 4 years | English | History | . | . 11th Grade Classes: . AP Environmental Science - College Credit | AP Statistics - College Credit | AP Computer Science A - College Credit | Honors Principles of Engineering | English | History | . Experience &amp; Skills . Summer Classes/ Internships: Stanford two week intrologic course | Harvard three week coding summer classes | . | Professional Del Norte High School Clubs: Algorithmic Coding Club - Competes in the National American Computer Science League | Math Club - Competes in the National American Mathematics Competitions | . | Community Leadership and Volunteering: A group leader in scouts - leading a total of 15 4th graders on a weekly basis. | Del Norte Nighthawk Nation Club - contributing to the school social activities | . | Athletics: Competitive soccer in San Diego Force FC | Competes for the award-winning Del Norte High School Track and Field Team | . | Programing Languages: Python, JavaScript, Html, Css, Java | . | .",
            "url": "https://reem57.github.io/blog_new/markdown/2022/09/12/CV.html",
            "relUrl": "/markdown/2022/09/12/CV.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Week 2",
            "content": "Peer Grade: 2.7+/3.0 . He had all the requirements for the week including the code.org completion and the Java menu. On top of that he had stats calculator. . Week 2 Requirements . Insight | Java Menu | Stats Calculator | . Code.org: . .",
            "url": "https://reem57.github.io/blog_new/markdown/2022/09/06/week2.html",
            "relUrl": "/markdown/2022/09/06/week2.html",
            "date": " • Sep 6, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Java Menu",
            "content": "import java.util.Scanner; //library for user input import java.lang.Math; //library for random numbers public class Menu { // Instance Variables public final String DEFAULT = &quot; u001B[0m&quot;; // Default Terminal Color public final String[][] COLORS = { // 2D Array of ANSI Terminal Colors {&quot;Default&quot;,DEFAULT}, {&quot;Red&quot;, &quot; u001B[31m&quot;}, {&quot;Green&quot;, &quot; u001B[32m&quot;}, {&quot;Yellow&quot;, &quot; u001B[33m&quot;}, {&quot;Blue&quot;, &quot; u001B[34m&quot;}, {&quot;Purple&quot;, &quot; u001B[35m&quot;}, {&quot;Cyan&quot;, &quot; u001B[36m&quot;}, {&quot;White&quot;, &quot; u001B[37m&quot;}, }; // 2D column location for data public final int NAME = 0; public final int ANSI = 1; // ANSI is the &quot;standard&quot; for terminal codes // Constructor on this Object takes control of menu events and actions public Menu() { Scanner sc = new Scanner(System.in); // using Java Scanner Object this.print(); // print Menu boolean quit = false; while (!quit) { try { // scan for Input int choice = sc.nextInt(); // using method from Java Scanner Object System.out.print(&quot;&quot; + choice + &quot;: &quot;); quit = this.action(choice); // take action } catch (Exception e) { sc.nextLine(); // error: clear buffer System.out.println(e + &quot;: Not a number, try again.&quot;); } } sc.close(); } // Print the menu options to Terminal private void print() { //System.out.println commands below is used to present a Menu to the user. System.out.println(&quot;__________________________ n&quot;); System.out.println(&quot;Choose from these choices:&quot;); System.out.println(&quot;__________________________ n&quot;); System.out.println(&quot;1 - Say Hello&quot;); System.out.println(&quot;2 - Output colors&quot;); System.out.println(&quot;3 - Loading in color&quot;); System.out.println(&quot;4 - Factorial Calculator&quot;); System.out.println(&quot;5 - Degrees to Radians&quot;); System.out.println(&quot;6 - Grade Calculator&quot;); System.out.println(&quot;0 - Quit&quot;); System.out.println(&quot;__________________________ n&quot;); } // Private method to perform action and return true if action is to quit/exit private boolean action(int selection) { boolean quit = false; switch (selection) { // Switch or Switch/Case is Control Flow statement and is used to evaluate the user selection case 0: System.out.print(&quot;Goodbye, World!&quot;); quit = true; break; case 1: System.out.print(&quot;Hello, World!&quot;); break; case 2: for(int i = 0; i &lt; COLORS.length; i++) // loop through COLORS array System.out.print(COLORS[i][ANSI] + COLORS[i][NAME]); break; case 3: System.out.print(&quot;Loading...&quot;); for (int i = 0; i &lt; 10; i++) { // fixed length loading bar int random = (int) (Math.random() * COLORS.length); // random logic try { Thread.sleep(100); // delay for loading } catch (Exception e) { System.out.println(e); } System.out.print(COLORS[random][ANSI] + &quot;Hey! &quot;); } break; case 4: System.out.print(&quot;Enter an Integer:&quot;); Scanner myObj = new Scanner(System.in); int number = myObj.nextInt(); int i,fact=1; for(i=1;i&lt;=number;i++){ fact=fact*i; } System.out.println(&quot; nFactorial of &quot;+number+&quot; is: &quot;+fact); break; case 5: System.out.print(&quot;Enter a Degree Value:&quot;); Scanner myObj2 = new Scanner(System.in); double number2 = myObj2.nextDouble(); double radians = Math.toRadians(number2); System.out.println(&quot; nValue in Radians = &quot; + String.format(&quot;%.2f&quot;, radians)); break; case 6: /* This program assumes that the student has 6 subjects, * thats why I have created the array of size 6. You can * change this as per the requirement. */ int marks[] = new int[5]; float total=0, avg; Scanner scanner = new Scanner(System.in); for(i=0; i&lt;5; i++) { System.out.print(&quot;Enter Grade for Period &quot;+(i+1)+&quot;: &quot;); int test = scanner.nextInt(); marks[i] = test; System.out.println(test); System.out.println(marks[i]); total = total + marks[i]; } scanner.close(); //Calculating average here avg = total/5; System.out.println(&quot;The student Grade is: &quot;); if(avg&gt;=80) { System.out.println(&quot;A &quot; + avg); } else if(avg&gt;=60 &amp;&amp; avg&lt;80){ System.out.println(&quot;B &quot; + avg); } else if(avg&gt;=40 &amp;&amp; avg&lt;60){ System.out.println(&quot;C &quot; + avg); } else{ System.out.println(&quot;D &quot; + avg); } break; default: //Prints error message from console System.out.print(&quot;Unexpected choice, try again.&quot;); } System.out.println(DEFAULT); // make sure to reset color and provide new line return quit; } // Static driver/tester method static public void main(String[] args) { new Menu(); // starting Menu object } } Menu.main(null); . __________________________ Choose from these choices: __________________________ 1 - Say Hello 2 - Output colors 3 - Loading in color 4 - Factorial Calculator 5 - Degrees to Radians 6 - Grade Calculator 0 - Quit __________________________ .",
            "url": "https://reem57.github.io/blog_new/2022/09/06/javaMenu.html",
            "relUrl": "/2022/09/06/javaMenu.html",
            "date": " • Sep 6, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Week 1",
            "content": "Self Grade: 2.8/3.0 . Self Grade since Valen left the group. I added dark mode, experimented and got my own GPA Calculator on top of all the requirements. . Week 1 Requirements . Insight | College Board Year Plan | Java Primitives | Tool Checks | | .",
            "url": "https://reem57.github.io/blog_new/markdown/2022/08/29/week1.html",
            "relUrl": "/markdown/2022/08/29/week1.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "Aluminai Panel",
            "content": "how did you know you wanted to do your major? . Love for problem solving | started from a young age | through internships | logical thinking background | Robotics team was interesting | Helped with web design | gave a little kickstart | made own games | applied the knowledge from the games to the real world. | . What is the biggest challenge you have encountered with CS? . keeping up the motivation | Errors and bugs that people couldn’t solve | focus on your own path | don’t worry about what other people are doing | There is always someone that is better than you | syntax is annoying | Google can be helpful with a lot of questions that you have | temptation to cheat (don’t cut corners) | willing to get started with coding | . Are there any PBL scenarios in college . One at the beginning of the four years and one at the end | will differently show up | study in groups to try to understand better PBL | Same structure in a lot of college classes | find your style of how to do PBL | Try to make it more efficient and less painful | . How have you applied CS in your major . MatLab is used a lot | 3D can use code | advance math classes can use CS a lot | Jupiter Notebook is used for a technical paper | Stats and psychology uses a lot of programming | . For existing college students have you had a job with school or professor? . how do you make yourself different | TA, internships, Tutor, | . Summary: . Try to cut as much less corners to increase your experience. Put yourself out there and differ from others with internships, clubs, jobs, TA, Tutoring, and more. Keep motivated and takes breaks when you need to in order to fix annoying bugs. Search things that you don’t know on Google. Computer Science is very important in a lot of majors, especially STEM. .",
            "url": "https://reem57.github.io/blog_new/markdown/2022/08/29/Aluminai.html",
            "relUrl": "/markdown/2022/08/29/Aluminai.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "Year Plan",
            "content": "Big Ideas . There are 58 sub units overall that need to be covered until the AP Exam on May 3rd (35 weeks including breaks). So every week I will have to complete and take notes on two sub units in college board. Then I will have up to 6 weeks of preparation for the AP Exam. . Weekly basis: . My week consists of things that I can&#39;t move like soccer practice on Monday and Wednesday, scouts on sunday and more. So I will make a schedule of taking notes based on the the amount of &quot;free time&quot; I have those days. . Tuesday: Take notes on one sub unit and summarize it on the blog | Thursday: Take notes on another sub unit and summarize it on the blog | Every end of a Unit: Review the content and write a quick summer of the content. | Last Weeks before the AP Exam . Find some MC online and practice it | Practice free response questions | Take 3 mock tests before the real deal | Ask Questions about anything that I am confused about. | .",
            "url": "https://reem57.github.io/blog_new/jupyter/2022/08/28/yearPlan.html",
            "relUrl": "/jupyter/2022/08/28/yearPlan.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "Java Primitives",
            "content": "public class DefinePrimitives { public static void main(String[] args) { int anInt = 100; double aDouble = 89.9; boolean aBoolean = true; // not primitives but essential String aString = &quot;Hello, World!&quot;; // wrapper class shortcut assignment String aStringFormal = new String(&quot;Greetings, World!&quot;); System.out.println(&quot;anInt: &quot; + anInt); System.out.println(&quot;aDouble: &quot; + aDouble); System.out.println(&quot;aBoolean: &quot; + aBoolean); System.out.println(&quot;aString: &quot; + aString); System.out.println(&quot;aStringFormal: &quot; + aStringFormal); } } DefinePrimitives.main(null) . anInt: 100 aDouble: 89.9 aBoolean: true aString: Hello, World! aStringFormal: Greetings, World! . public class PrimitiveDivision { public static void main(String[] args) { int i1 = 7, i2 = 2; System.out.println(&quot;Integer Division&quot;); System.out.println(&quot; tint output with concatenation: &quot; + i1 + &quot;/&quot; + i2 + &quot; = &quot; + i1/i2); System.out.println(String.format(&quot; tint output with format: %d/%d = %d&quot;,i1, i2, i1/i2)); System.out.printf(&quot; tint output with printf: %d/%d = %d n&quot;,i1, i2, i1/i2); double d1 = 7, d2 = 2; System.out.println(&quot;Double Division&quot;); System.out.println(&quot; tdouble output with concatenation: &quot; + d1 + &quot;/&quot; + d2 + &quot; = &quot; + d1/d2); System.out.println(String.format(&quot; tdouble output with format: %.2f/%.2f = %.2f&quot;,d1, d2, d1/d2)); System.out.printf(&quot; tdouble output with printf: %.2f/%.2f = %.2f n&quot;,d1, d2, d1/d2); System.out.println(&quot;Casting and Remainders&quot;); System.out.printf(&quot; tint cast to double on division: %d/%d = %.2f n&quot;,i1, i2, i1/(double)i2); System.out.println(&quot; tint using modulo for remainder: &quot; + i1 + &quot;/&quot; + i2 + &quot; = &quot; + i1/i2 + &quot; remainder &quot; + i1%i2); } } PrimitiveDivision.main(null); . Integer Division int output with concatenation: 7/2 = 3 int output with format: 7/2 = 3 int output with printf: 7/2 = 3 Double Division double output with concatenation: 7.0/2.0 = 3.5 double output with format: 7.00/2.00 = 3.50 double output with printf: 7.00/2.00 = 3.50 Casting and Remainders int cast to double on division: 7/2 = 3.50 int using modulo for remainder: 7/2 = 3 remainder 1 . // java style to import library import java.util.Scanner; // class must alway have 1st letter as uppercase, CamelCase is Java Class convention public class ScanPrimitives { public static void main(String[] args) { Scanner input; // primitive int input = new Scanner(System.in); System.out.print(&quot;Enter an integer: &quot;); try { int sampleInputInt = input.nextInt(); System.out.println(sampleInputInt); } catch (Exception e) { // if not an integer System.out.println(&quot;This is not an integer&quot;); } input.close(); // primitive double input = new Scanner(System.in); System.out.print(&quot;Enter a double: &quot;); try { double sampleInputDouble = input.nextDouble(); System.out.println(sampleInputDouble); } catch (Exception e) { // if not a number System.out.println(&quot;Not an double (form like 9.99), &quot; + e); } input.close(); // primitive boolean input = new Scanner(System.in); System.out.print(&quot;Enter a boolean: &quot;); try { boolean sampleInputBoolean = input.nextBoolean(); System.out.println(sampleInputBoolean); } catch (Exception e) { // if not true or false System.out.println(&quot;Not an boolean (true or false), &quot; + e); } input.close(); // wrapper class String input = new Scanner(System.in); System.out.print(&quot;Enter a String: &quot;); try { String sampleInputString = input.nextLine(); System.out.println(sampleInputString); } catch (Exception e) { // this may never happen System.out.println(&quot;Not an String, &quot; + e); } input.close(); } } ScanPrimitives.main(null); . Enter an integer: Not an integer (form like 159), java.util.InputMismatchException Enter a double: 7.9 Enter a boolean: true Enter a String: false . Integer - a number value non negative and not a decimal | Double - A number value with a decimal | Boolean - True or False values that are usually used in if statements | string - Any character that the computer can print | . GPA Calculator . public class GPACalculator{ // introduction to Double wrapper class (object) ArrayList&lt;Double&gt; grades; // similar to Python list // constructor, initializes ArrayList and call enterGrades method public GPACalculator() { this.grades = new ArrayList&lt;&gt;(); this.enterGrades(); } // enterGrades input method using scanner double average = 0; private double enterGrades() { Scanner input; input = new Scanner(System.in); System.out.print(&quot;How many classes have you taken: n&quot;); try { double classNum = input.nextInt(); for (int i = 0; i &lt; classNum; i++) { input = new Scanner(System.in); System.out.print(&quot;Enter your credits for each class (1-5): &quot;); try { double sampleInputDouble = input.nextDouble(); System.out.println(sampleInputDouble); this.grades.add(sampleInputDouble); } catch (Exception e) { // if not a number System.out.println(&quot;Not an double (form like 9.99), &quot; + e); } input.close(); } double total = 0; // running total for (double num : this.grades) { // enhanced for loop total += num; // shortcut add and assign operator } average = total/ classNum; } catch (Exception e) { // if not an integer System.out.println(&quot;This is not an integer&quot;); } return average; // double math, ArrayList grades object maintains its size } // average calculation public double average() { return (average); // double math, ArrayList grades object maintains its size } public static void main(String[] args) { GPACalculator grades = new GPACalculator(); // calls constructor, creates object, which calls enterGrades System.out.println(&quot;Average: &quot; + String.format(&quot;%.2f&quot;, grades.average())); // format used to standardize to two decimal points } } // IJava activation GPACalculator.main(null); . How many classes have you taken: Enter your credits for each class (1-5): 5.0 Enter your credits for each class (1-5): 4.0 Enter your credits for each class (1-5): 5.0 Enter your credits for each class (1-5): 4.0 Average: 4.50 .",
            "url": "https://reem57.github.io/blog_new/jupyter/2022/08/28/primitives.html",
            "relUrl": "/jupyter/2022/08/28/primitives.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "Installation Checks",
            "content": "Python Checks . python --version python2 --version python3 --version . Python 3.9.12 Python 2.7.18 Python 3.9.12 . Conda Pack . conda list . # packages in environment at /home/reem57/anaconda3: # # Name Version Build Channel _ipyw_jlab_nb_ext_conf 0.1.0 py39h06a4308_1 _libgcc_mutex 0.1 main _openmp_mutex 4.5 1_gnu aiohttp 3.8.1 py39h7f8727e_1 aiosignal 1.2.0 pyhd3eb1b0_0 alabaster 0.7.12 pyhd3eb1b0_0 anaconda 2022.05 py39_0 anaconda-client 1.9.0 py39h06a4308_0 anaconda-navigator 2.1.4 py39h06a4308_0 anaconda-project 0.10.2 pyhd3eb1b0_0 anyio 3.5.0 py39h06a4308_0 appdirs 1.4.4 pyhd3eb1b0_0 argon2-cffi 21.3.0 pyhd3eb1b0_0 argon2-cffi-bindings 21.2.0 py39h7f8727e_0 arrow 1.2.2 pyhd3eb1b0_0 astroid 2.6.6 py39h06a4308_0 astropy 5.0.4 py39hce1f21e_0 asttokens 2.0.5 pyhd3eb1b0_0 async-timeout 4.0.1 pyhd3eb1b0_0 atomicwrites 1.4.0 py_0 attrs 21.4.0 pyhd3eb1b0_0 automat 20.2.0 py_0 autopep8 1.6.0 pyhd3eb1b0_0 babel 2.9.1 pyhd3eb1b0_0 backcall 0.2.0 pyhd3eb1b0_0 backports 1.1 pyhd3eb1b0_0 backports.functools_lru_cache 1.6.4 pyhd3eb1b0_0 backports.tempfile 1.0 pyhd3eb1b0_1 backports.weakref 1.0.post1 py_1 bash-kernel 0.7.2 pypi_0 pypi bcrypt 3.2.0 py39he8ac12f_0 beautifulsoup4 4.11.1 py39h06a4308_0 binaryornot 0.4.4 pyhd3eb1b0_1 bitarray 2.4.1 py39h7f8727e_0 bkcharts 0.2 py39h06a4308_0 black 19.10b0 py_0 blas 1.0 mkl bleach 4.1.0 pyhd3eb1b0_0 blosc 1.21.0 h8c45485_0 bokeh 2.4.2 py39h06a4308_0 boto3 1.21.32 pyhd3eb1b0_0 botocore 1.24.32 pyhd3eb1b0_0 bottleneck 1.3.4 py39hce1f21e_0 brotli 1.0.9 he6710b0_2 brotlipy 0.7.0 py39h27cfd23_1003 brunsli 0.1 h2531618_0 bzip2 1.0.8 h7b6447c_0 c-ares 1.18.1 h7f8727e_0 ca-certificates 2022.3.29 h06a4308_1 cachetools 4.2.2 pyhd3eb1b0_0 certifi 2021.10.8 py39h06a4308_2 cffi 1.15.0 py39hd667e15_1 cfitsio 3.470 hf0d0db6_6 chardet 4.0.0 py39h06a4308_1003 charls 2.2.0 h2531618_0 charset-normalizer 2.0.4 pyhd3eb1b0_0 click 8.0.4 py39h06a4308_0 cloudpickle 2.0.0 pyhd3eb1b0_0 clyent 1.2.2 py39h06a4308_1 colorama 0.4.4 pyhd3eb1b0_0 colorcet 2.0.6 pyhd3eb1b0_0 conda 4.13.0 py39h06a4308_0 conda-build 3.21.8 py39h06a4308_2 conda-content-trust 0.1.1 pyhd3eb1b0_0 conda-env 2.6.0 1 conda-pack 0.6.0 pyhd3eb1b0_0 conda-package-handling 1.8.1 py39h7f8727e_0 conda-repo-cli 1.0.4 pyhd3eb1b0_0 conda-token 0.3.0 pyhd3eb1b0_0 conda-verify 3.4.2 py_1 constantly 15.1.0 pyh2b92418_0 cookiecutter 1.7.3 pyhd3eb1b0_0 cryptography 3.4.8 py39hd23ed53_0 cssselect 1.1.0 pyhd3eb1b0_0 curl 7.82.0 h7f8727e_0 cycler 0.11.0 pyhd3eb1b0_0 cython 0.29.28 py39h295c915_0 cytoolz 0.11.0 py39h27cfd23_0 daal4py 2021.5.0 py39h78b71dc_0 dal 2021.5.1 h06a4308_803 dask 2022.2.1 pyhd3eb1b0_0 dask-core 2022.2.1 pyhd3eb1b0_0 dataclasses 0.8 pyh6d0b6a4_7 datashader 0.13.0 pyhd3eb1b0_1 datashape 0.5.4 py39h06a4308_1 dbus 1.13.18 hb2f20db_0 debugpy 1.5.1 py39h295c915_0 decorator 5.1.1 pyhd3eb1b0_0 defusedxml 0.7.1 pyhd3eb1b0_0 diff-match-patch 20200713 pyhd3eb1b0_0 distributed 2022.2.1 pyhd3eb1b0_0 docutils 0.17.1 py39h06a4308_1 entrypoints 0.4 py39h06a4308_0 et_xmlfile 1.1.0 py39h06a4308_0 executing 0.8.3 pyhd3eb1b0_0 expat 2.4.4 h295c915_0 filelock 3.6.0 pyhd3eb1b0_0 flake8 3.9.2 pyhd3eb1b0_0 flask 1.1.2 pyhd3eb1b0_0 fontconfig 2.13.1 h6c09931_0 fonttools 4.25.0 pyhd3eb1b0_0 freetype 2.11.0 h70c0345_0 frozenlist 1.2.0 py39h7f8727e_0 fsspec 2022.2.0 pyhd3eb1b0_0 future 0.18.2 py39h06a4308_1 gensim 4.1.2 py39h295c915_0 giflib 5.2.1 h7b6447c_0 glib 2.69.1 h4ff587b_1 glob2 0.7 pyhd3eb1b0_0 gmp 6.2.1 h2531618_2 gmpy2 2.1.2 py39heeb90bb_0 google-api-core 1.25.1 pyhd3eb1b0_0 google-auth 1.33.0 pyhd3eb1b0_0 google-cloud-core 1.7.1 pyhd3eb1b0_0 google-cloud-storage 1.31.0 py_0 google-crc32c 1.1.2 py39h27cfd23_0 google-resumable-media 1.3.1 pyhd3eb1b0_1 googleapis-common-protos 1.53.0 py39h06a4308_0 greenlet 1.1.1 py39h295c915_0 grpcio 1.42.0 py39hce63b2e_0 gst-plugins-base 1.14.0 h8213a91_2 gstreamer 1.14.0 h28cd5cc_2 h5py 3.6.0 py39ha0f2276_0 hdf5 1.10.6 hb1b8bf9_0 heapdict 1.0.1 pyhd3eb1b0_0 holoviews 1.14.8 pyhd3eb1b0_0 hvplot 0.7.3 pyhd3eb1b0_1 hyperlink 21.0.0 pyhd3eb1b0_0 icu 58.2 he6710b0_3 idna 3.3 pyhd3eb1b0_0 imagecodecs 2021.8.26 py39h4cda21f_0 imageio 2.9.0 pyhd3eb1b0_0 imagesize 1.3.0 pyhd3eb1b0_0 importlib-metadata 4.11.3 py39h06a4308_0 importlib_metadata 4.11.3 hd3eb1b0_0 incremental 21.3.0 pyhd3eb1b0_0 inflection 0.5.1 py39h06a4308_0 iniconfig 1.1.1 pyhd3eb1b0_0 intake 0.6.5 pyhd3eb1b0_0 intel-openmp 2021.4.0 h06a4308_3561 intervaltree 3.1.0 pyhd3eb1b0_0 ipykernel 6.9.1 py39h06a4308_0 ipython 8.2.0 py39h06a4308_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 ipywidgets 7.6.5 pyhd3eb1b0_1 isort 5.9.3 pyhd3eb1b0_0 itemadapter 0.3.0 pyhd3eb1b0_0 itemloaders 1.0.4 pyhd3eb1b0_1 itsdangerous 2.0.1 pyhd3eb1b0_0 jdcal 1.4.1 pyhd3eb1b0_0 jedi 0.18.1 py39h06a4308_1 jeepney 0.7.1 pyhd3eb1b0_0 jinja2 2.11.3 pyhd3eb1b0_0 jinja2-time 0.2.0 pyhd3eb1b0_3 jmespath 0.10.0 pyhd3eb1b0_0 joblib 1.1.0 pyhd3eb1b0_0 jpeg 9e h7f8727e_0 jq 1.6 h27cfd23_1000 json5 0.9.6 pyhd3eb1b0_0 jsonschema 4.4.0 py39h06a4308_0 jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 jxrlib 1.1 h7b6447c_2 keyring 23.4.0 py39h06a4308_0 kiwisolver 1.3.2 py39h295c915_0 krb5 1.19.2 hac12032_0 lazy-object-proxy 1.6.0 py39h27cfd23_0 lcms2 2.12 h3be6417_0 ld_impl_linux-64 2.35.1 h7274673_9 lerc 3.0 h295c915_0 libaec 1.0.4 he6710b0_1 libarchive 3.4.2 h62408e4_0 libcrc32c 1.1.1 he6710b0_2 libcurl 7.82.0 h0b77cf5_0 libdeflate 1.8 h7f8727e_5 libedit 3.1.20210910 h7f8727e_0 libev 4.33 h7f8727e_1 libffi 3.3 he6710b0_2 libgcc 7.2.0 h69d50b8_2 libgcc-ng 9.3.0 h5101ec6_17 libgfortran-ng 7.5.0 ha8ba4b0_17 libgfortran4 7.5.0 ha8ba4b0_17 libgomp 9.3.0 h5101ec6_17 libidn2 2.3.2 h7f8727e_0 liblief 0.11.5 h295c915_1 libllvm11 11.1.0 h3826bc1_1 libnghttp2 1.46.0 hce63b2e_0 libpng 1.6.37 hbc83047_0 libprotobuf 3.19.1 h4ff587b_0 libsodium 1.0.18 h7b6447c_0 libspatialindex 1.9.3 h2531618_0 libssh2 1.10.0 h8f2d780_0 libstdcxx-ng 9.3.0 hd4cf53a_17 libtiff 4.2.0 h85742a9_0 libunistring 0.9.10 h27cfd23_0 libuuid 1.0.3 h7f8727e_2 libwebp 1.2.2 h55f646e_0 libwebp-base 1.2.2 h7f8727e_0 libxcb 1.14 h7b6447c_0 libxml2 2.9.12 h03d6c58_0 libxslt 1.1.34 hc22bd24_0 libzopfli 1.0.3 he6710b0_0 llvmlite 0.38.0 py39h4ff587b_0 locket 0.2.1 py39h06a4308_2 lxml 4.8.0 py39h1f438cf_0 lz4-c 1.9.3 h295c915_1 lzo 2.10 h7b6447c_2 markdown 3.3.4 py39h06a4308_0 markupsafe 2.0.1 py39h27cfd23_0 matplotlib 3.5.1 py39h06a4308_1 matplotlib-base 3.5.1 py39ha18d171_1 matplotlib-inline 0.1.2 pyhd3eb1b0_2 mccabe 0.6.1 py39h06a4308_1 mistune 0.8.4 py39h27cfd23_1000 mkl 2021.4.0 h06a4308_640 mkl-service 2.4.0 py39h7f8727e_0 mkl_fft 1.3.1 py39hd3c417c_0 mkl_random 1.2.2 py39h51133e4_0 mock 4.0.3 pyhd3eb1b0_0 mpc 1.1.0 h10f8cd9_1 mpfr 4.0.2 hb69a4c5_1 mpi 1.0 mpich mpich 3.3.2 hc856adb_0 mpmath 1.2.1 py39h06a4308_0 msgpack-python 1.0.2 py39hff7bd54_1 multidict 5.2.0 py39h7f8727e_2 multipledispatch 0.6.0 py39h06a4308_0 munkres 1.1.4 py_0 mypy_extensions 0.4.3 py39h06a4308_1 navigator-updater 0.2.1 py39_1 nbclassic 0.3.5 pyhd3eb1b0_0 nbclient 0.5.13 py39h06a4308_0 nbconvert 6.4.4 py39h06a4308_0 nbformat 5.3.0 py39h06a4308_0 ncurses 6.3 h7f8727e_2 nest-asyncio 1.5.5 py39h06a4308_0 networkx 2.7.1 pyhd3eb1b0_0 nltk 3.7 pyhd3eb1b0_0 nodejs 6.11.2 h3db8ef7_0 nose 1.3.7 pyhd3eb1b0_1008 notebook 6.4.8 py39h06a4308_0 numba 0.55.1 py39h51133e4_0 numexpr 2.8.1 py39h6abb31d_0 numpy 1.21.5 py39he7a7128_1 numpy-base 1.21.5 py39hf524024_1 numpydoc 1.2 pyhd3eb1b0_0 olefile 0.46 pyhd3eb1b0_0 oniguruma 6.9.7.1 h27cfd23_0 openjpeg 2.4.0 h3ad879b_0 openpyxl 3.0.9 pyhd3eb1b0_0 openssl 1.1.1n h7f8727e_0 packaging 21.3 pyhd3eb1b0_0 pandas 1.4.2 py39h295c915_0 pandocfilters 1.5.0 pyhd3eb1b0_0 panel 0.13.0 py39h06a4308_0 param 1.12.0 pyhd3eb1b0_0 parsel 1.6.0 py39h06a4308_0 parso 0.8.3 pyhd3eb1b0_0 partd 1.2.0 pyhd3eb1b0_1 patchelf 0.13 h295c915_0 pathspec 0.7.0 py_0 patsy 0.5.2 py39h06a4308_1 pcre 8.45 h295c915_0 pep8 1.7.1 py39h06a4308_0 pexpect 4.8.0 pyhd3eb1b0_3 pickleshare 0.7.5 pyhd3eb1b0_1003 pillow 9.0.1 py39h22f2fdc_0 pip 21.2.4 py39h06a4308_0 pkginfo 1.8.2 pyhd3eb1b0_0 plotly 5.6.0 pyhd3eb1b0_0 pluggy 1.0.0 py39h06a4308_1 poyo 0.5.0 pyhd3eb1b0_0 prometheus_client 0.13.1 pyhd3eb1b0_0 prompt-toolkit 3.0.20 pyhd3eb1b0_0 prompt_toolkit 3.0.20 hd3eb1b0_0 protego 0.1.16 py_0 protobuf 3.19.1 py39h295c915_0 psutil 5.8.0 py39h27cfd23_1 ptyprocess 0.7.0 pyhd3eb1b0_2 pure_eval 0.2.2 pyhd3eb1b0_0 py 1.11.0 pyhd3eb1b0_0 py-lief 0.11.5 py39h295c915_1 pyasn1 0.4.8 pyhd3eb1b0_0 pyasn1-modules 0.2.8 py_0 pycodestyle 2.7.0 pyhd3eb1b0_0 pycosat 0.6.3 py39h27cfd23_0 pycparser 2.21 pyhd3eb1b0_0 pyct 0.4.6 py39h06a4308_0 pycurl 7.44.1 py39h8f2d780_1 pydispatcher 2.0.5 py39h06a4308_2 pydocstyle 6.1.1 pyhd3eb1b0_0 pyerfa 2.0.0 py39h27cfd23_0 pyflakes 2.3.1 pyhd3eb1b0_0 pygments 2.11.2 pyhd3eb1b0_0 pyhamcrest 2.0.2 pyhd3eb1b0_2 pyjwt 2.1.0 py39h06a4308_0 pylint 2.9.6 py39h06a4308_1 pyls-spyder 0.4.0 pyhd3eb1b0_0 pyodbc 4.0.32 py39h295c915_1 pyopenssl 21.0.0 pyhd3eb1b0_1 pyparsing 3.0.4 pyhd3eb1b0_0 pyqt 5.9.2 py39h2531618_6 pyrsistent 0.18.0 py39heee7806_0 pysocks 1.7.1 py39h06a4308_0 pytables 3.6.1 py39h77479fe_1 pytest 7.1.1 py39h06a4308_0 python 3.9.12 h12debd9_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h2531618_3 pytz 2021.3 pyhd3eb1b0_0 pyviz_comms 2.0.2 pyhd3eb1b0_0 pywavelets 1.3.0 py39h7f8727e_0 pyxdg 0.27 pyhd3eb1b0_0 pyyaml 6.0 py39h7f8727e_1 pyzmq 22.3.0 py39h295c915_2 qdarkstyle 3.0.2 pyhd3eb1b0_0 qstylizer 0.1.10 pyhd3eb1b0_0 qt 5.9.7 h5867ecd_1 qtawesome 1.0.3 pyhd3eb1b0_0 qtconsole 5.3.0 pyhd3eb1b0_0 qtpy 2.0.1 pyhd3eb1b0_0 queuelib 1.5.0 py39h06a4308_0 readline 8.1.2 h7f8727e_1 regex 2022.3.15 py39h7f8727e_0 requests 2.27.1 pyhd3eb1b0_0 requests-file 1.5.1 pyhd3eb1b0_0 ripgrep 12.1.1 0 rope 0.22.0 pyhd3eb1b0_0 rsa 4.7.2 pyhd3eb1b0_1 rtree 0.9.7 py39h06a4308_1 ruamel_yaml 0.15.100 py39h27cfd23_0 s3transfer 0.5.0 pyhd3eb1b0_0 scikit-image 0.19.2 py39h51133e4_0 scikit-learn 1.0.2 py39h51133e4_1 scikit-learn-intelex 2021.5.0 py39h06a4308_0 scipy 1.7.3 py39hc147768_0 scrapy 2.6.1 py39h06a4308_0 seaborn 0.11.2 pyhd3eb1b0_0 secretstorage 3.3.1 py39h06a4308_0 send2trash 1.8.0 pyhd3eb1b0_1 service_identity 18.1.0 pyhd3eb1b0_1 setuptools 61.2.0 py39h06a4308_0 sip 4.19.13 py39h295c915_0 six 1.16.0 pyhd3eb1b0_1 smart_open 5.1.0 pyhd3eb1b0_0 snappy 1.1.9 h295c915_0 sniffio 1.2.0 py39h06a4308_1 snowballstemmer 2.2.0 pyhd3eb1b0_0 sortedcollections 2.1.0 pyhd3eb1b0_0 sortedcontainers 2.4.0 pyhd3eb1b0_0 soupsieve 2.3.1 pyhd3eb1b0_0 sphinx 4.4.0 pyhd3eb1b0_0 sphinxcontrib-applehelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-devhelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-htmlhelp 2.0.0 pyhd3eb1b0_0 sphinxcontrib-jsmath 1.0.1 pyhd3eb1b0_0 sphinxcontrib-qthelp 1.0.3 pyhd3eb1b0_0 sphinxcontrib-serializinghtml 1.1.5 pyhd3eb1b0_0 spyder 5.1.5 py39h06a4308_1 spyder-kernels 2.1.3 py39h06a4308_0 sqlalchemy 1.4.32 py39h7f8727e_0 sqlite 3.38.2 hc218d9a_0 stack_data 0.2.0 pyhd3eb1b0_0 statsmodels 0.13.2 py39h7f8727e_0 sympy 1.10.1 py39h06a4308_0 tabulate 0.8.9 py39h06a4308_0 tbb 2021.5.0 hd09550d_0 tbb4py 2021.5.0 py39hd09550d_0 tblib 1.7.0 pyhd3eb1b0_0 tenacity 8.0.1 py39h06a4308_0 terminado 0.13.1 py39h06a4308_0 testpath 0.5.0 pyhd3eb1b0_0 text-unidecode 1.3 pyhd3eb1b0_0 textdistance 4.2.1 pyhd3eb1b0_0 threadpoolctl 2.2.0 pyh0d69192_0 three-merge 0.1.1 pyhd3eb1b0_0 tifffile 2021.7.2 pyhd3eb1b0_2 tinycss 0.4 pyhd3eb1b0_1002 tk 8.6.11 h1ccaba5_0 tldextract 3.2.0 pyhd3eb1b0_0 toml 0.10.2 pyhd3eb1b0_0 tomli 1.2.2 pyhd3eb1b0_0 toolz 0.11.2 pyhd3eb1b0_0 tornado 6.1 py39h27cfd23_0 tqdm 4.64.0 py39h06a4308_0 traitlets 5.1.1 pyhd3eb1b0_0 twisted 22.2.0 py39h7f8727e_0 typed-ast 1.4.3 py39h7f8727e_1 typing-extensions 4.1.1 hd3eb1b0_0 typing_extensions 4.1.1 pyh06a4308_0 tzdata 2022a hda174b7_0 ujson 5.1.0 py39h295c915_0 unidecode 1.2.0 pyhd3eb1b0_0 unixodbc 2.3.9 h7b6447c_0 urllib3 1.26.9 py39h06a4308_0 w3lib 1.21.0 pyhd3eb1b0_0 watchdog 2.1.6 py39h06a4308_0 wcwidth 0.2.5 pyhd3eb1b0_0 webencodings 0.5.1 py39h06a4308_1 websocket-client 0.58.0 py39h06a4308_4 werkzeug 2.0.3 pyhd3eb1b0_0 wget 1.21.3 h0b77cf5_0 wheel 0.37.1 pyhd3eb1b0_0 widgetsnbextension 3.5.2 py39h06a4308_0 wrapt 1.12.1 py39he8ac12f_1 wurlitzer 3.0.2 py39h06a4308_0 xarray 0.20.1 pyhd3eb1b0_1 xlrd 2.0.1 pyhd3eb1b0_0 xlsxwriter 3.0.3 pyhd3eb1b0_0 xz 5.2.5 h7b6447c_0 yaml 0.2.5 h7b6447c_0 yapf 0.31.0 pyhd3eb1b0_0 yarl 1.6.3 py39h27cfd23_0 zeromq 4.3.4 h2531618_0 zfp 0.5.5 h295c915_6 zict 2.0.0 pyhd3eb1b0_0 zipp 3.7.0 pyhd3eb1b0_0 zlib 1.2.12 h7f8727e_2 zope 1.0 py39h06a4308_1 zope.interface 5.4.0 py39h7f8727e_0 zstd 1.4.9 haebb681_0 . Conda Packages . echo Conda Check # test for a kernel installation test=&quot;jupyter&quot; # keyword check=`conda list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . Conda Check jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 . Jupyter Checks . jupyter --version jupyter kernelspec list . Selected Jupyter core packages... IPython : 8.2.0 ipykernel : 6.9.1 ipywidgets : 7.6.5 jupyter_client : 6.1.12 jupyter_core : 4.9.2 jupyter_server : 1.13.5 jupyterlab : 3.3.2 nbclient : 0.5.13 nbconvert : 6.4.4 nbformat : 5.3.0 notebook : 6.4.8 qtconsole : 5.3.0 traitlets : 5.1.1 Available kernels: bash /home/reem57/.local/share/jupyter/kernels/bash java /home/reem57/.local/share/jupyter/kernels/java javascript /home/reem57/.local/share/jupyter/kernels/javascript python3 /home/reem57/anaconda3/share/jupyter/kernels/python3 . test=&quot;python3&quot; # keyword check=`jupyter kernelspec list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . python3 /home/reem57/anaconda3/share/jupyter/kernels/python3 .",
            "url": "https://reem57.github.io/blog_new/jupyter/2022/08/26/InstallingChecks.html",
            "relUrl": "/jupyter/2022/08/26/InstallingChecks.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "Cloning code",
            "content": "echo &quot;Using conditional statement to create a project directory and project&quot; # Variable section export project_dir=$HOME/vscode # change vscode to different name to test git clone export project=$project_dir/APCSP # change APCSP to name of project from git clone export project_repo=&quot;https://github.com/nighthawkcoders/APCSP.git&quot; # change to project of choice cd ~ # start in home directory # Conditional block to make a project directory if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... makinng directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; # Conditional block to git clone a project from project_repo if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . Using conditional statement to create a project directory and project Directory /home/reem57/vscode exists. Directory /home/reem57/vscode/APCSP exists. .",
            "url": "https://reem57.github.io/blog_new/jupyter/2022/08/25/CSPClone.html",
            "relUrl": "/jupyter/2022/08/25/CSPClone.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post23": {
            "title": "Week 0",
            "content": "Hack 1 . Insight . Java . . Python . . Hack 2 . Java project . .",
            "url": "https://reem57.github.io/blog_new/markdown/2022/08/19/week0.html",
            "relUrl": "/markdown/2022/08/19/week0.html",
            "date": " • Aug 19, 2022"
        }
        
    
  
    
        ,"post24": {
            "title": "Python",
            "content": "print(&quot;hello world&quot;) . hello world .",
            "url": "https://reem57.github.io/blog_new/jupyter/2022/08/19/python0.html",
            "relUrl": "/jupyter/2022/08/19/python0.html",
            "date": " • Aug 19, 2022"
        }
        
    
  
    
        ,"post25": {
            "title": "Java",
            "content": "System.out.println(&quot;hello world&quot;) . hello world .",
            "url": "https://reem57.github.io/blog_new/jupyter/2022/08/19/java0.html",
            "relUrl": "/jupyter/2022/08/19/java0.html",
            "date": " • Aug 19, 2022"
        }
        
    
  

  
  

  

  

  
      ,"page3": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://reem57.github.io/blog_new/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  
      ,"page8": {
          "title": "Space",
          "content": "&quot;use strict&quot;;let style=document.createElement(&quot;style&quot;);style.type=&quot;text/css&quot;,style.innerHTML=&quot;.dg.ac {z-index:2 !important;} body {margin: 0;padding: 0;} #text {z-index: 2;pointer-events: none;} canvas {position: fixed;width: 100vw;height: 100vh;overflow: hidden;z-index: 1;} #button {z-index:2;position:fixed;bottom:10px;left:10px;background-color: #fff;border: 1px solid #d5d9d9;border-radius: 8px;box-shadow: rgba(213, 217, 217, .5) 0 2px 5px 0;box-sizing: border-box;color: #0f1111;cursor: pointer;display: inline-block;font-family: &quot;Amazon Ember &quot;,sans-serif;font-size: 13px;line-height: 29px;padding: 0 10px 0 11px;text-align: center;text-decoration: none;user-select: none;-webkit-user-select: none;touch-action: manipulation;vertical-align: middle;width: 100px;};#button:hover {background-color: #f7fafa;};#button:focus {border-color: #008296;box-shadow: rgba(213, 217, 217, .5) 0 2px 5px 0;outline: 0;};&quot;,document.getElementsByTagName(&quot;head&quot;)[0].appendChild(style);let button = document.createElement(&quot;input&quot;);button.id=&quot;button&quot;;button.type=&#39;button&#39;;button.value=&quot;Go back&quot;;button.onclick=()=&gt;{history.back()};document.getElementsByTagName(&quot;body&quot;)[0].appendChild(button);import*as e from&quot;https://cdnjs.cloudflare.com/ajax/libs/three.js/r99/three.module.min.js&quot;;import{OrbitControls as t}from&quot;https://cdn.jsdelivr.net/npm/three@0.121.1/examples/jsm/controls/OrbitControls.js&quot;;import*as i from&quot;https://unpkg.com/dat.gui@0.7.7/build/dat.gui.module.js&quot;;let gui=new i.GUI;gui.domElement.id=&#39;gui&#39;;function rotateVector(t,i,o,s){let a=new e.Vector3(t.x,t.y,t.z),n=a.x;a.x=a.x*Math.cos(s)-a.y*Math.sin(s),a.y=n*Math.sin(s)+a.y*Math.cos(s),n=a.x,a.x=a.x*Math.cos(o)+a.z*Math.sin(o),a.z=-n*Math.sin(o)+a.z*Math.cos(o);let r=a.y;return a.y=a.y*Math.cos(i)-a.z*Math.sin(i),a.z=r*Math.sin(i)+a.z*Math.cos(i),a}function distance(e,t){let i=e.x-t.x,o=e.y-t.y,s;return Math.sqrt(i**2+o**2+(e.z-t.z)**2)||0}function onWindowResize(){camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight)}class AstronomicalObject{constructor(t,i,o,s,a){this.trailPoints=[],this.line=!1,Object.defineProperty(this,&quot;radius&quot;,{value:i*constants.scale,writable:!1}),Object.defineProperty(this,&quot;name&quot;,{value:t,writable:!1}),this.position=new e.Vector3(0,0,0),this.velocity=new e.Vector3(0,0,0),this.acceleration=new e.Vector3(0,0,0),this.mass=o||1,s&amp;&amp;(this.position=new e.Vector3(...s)),a&amp;&amp;(this.velocity=new e.Vector3(...a));let n=new e.SphereGeometry(this.radius,32,32),r=new e.MeshPhongMaterial({color:16777215});return this.body=new e.Mesh(n,r),this.color={set:e=&gt;{this.body.material.color.set(e)}},space[this.name.toLowerCase()]=this,bodies.push(this),scene.add(this.body),this}}let space={},bodies=[],elapseSpeed=0,dt=0,oldTime=0,simulationTime=9466848e5,objectTextVector=new e.Vector3,constants={simSpeed:0,gravity:66743e-15,scale:3e-10},tick=0,timePerStep=1,stepsPerTick=1,scene=new e.Scene,camera=new e.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.01,1e4);camera.target=void 0,camera.position.z=200;let renderer=new e.WebGLRenderer;renderer.setSize(window.innerWidth,window.innerHeight),renderer.shadowMap.enabled=!0,document.body.appendChild(renderer.domElement);let textCanvas=document.createElement(&quot;canvas&quot;);textCanvas.id=&quot;text&quot;,document.body.appendChild(textCanvas);let txtctx=textCanvas.getContext(&quot;2d&quot;);function createPathStrings(e){let t=[&quot;right&quot;,&quot;left&quot;,&quot;top&quot;,&quot;bottom&quot;,&quot;front&quot;,&quot;back&quot;].map(e=&gt;&quot;https://tristancopley.github.io/dnhs-blog/images/skybox/&quot;+e+&quot;.png&quot;);return t}window.addEventListener(&quot;resize&quot;,onWindowResize,!1);let skyboxImage=&quot;space&quot;;function createMaterialArray(t){let i=createPathStrings(t),o=i.map(t=&gt;{let i=new e.TextureLoader().load(t);return new e.MeshBasicMaterial({map:i,side:e.BackSide})});return o}let materialArray=createMaterialArray(skyboxImage),skyboxGeo=new e.BoxGeometry(5e14*constants.scale,5e14*constants.scale,5e14*constants.scale),skybox=new e.Mesh(skyboxGeo,materialArray);scene.add(skybox);let pointLight=new e.PointLight(16777215,3);pointLight.position.x=0,pointLight.position.y=0,pointLight.position.z=0,pointLight.castShadows=!0,scene.add(pointLight);let aLight=new e.AmbientLight(16777215,.8);scene.add(aLight);let controls=new t(camera,renderer.domElement);function end(){let e=gui.addFolder(&quot;Time&quot;);e.add(constants,&quot;simSpeed&quot;,0,950),e.open(),camera.target=Object.keys(space)[0].toString();let t=gui.addFolder(&quot;Camera&quot;);t.add(camera,&quot;target&quot;,Object.getOwnPropertyNames(space)),t.open()}function animate(){if(0===oldTime)return oldTime=Date.now(),requestAnimationFrame(animate);dt=Date.now()-oldTime||1,oldTime=Date.now(),tick++,simulationTime+=(stepsPerTick=37e3)*(timePerStep=500*(constants.simSpeed/1e5*1.00015**(86400*constants.simSpeed/1e3)))*1e3/(1e3/(dt||1)),timePerStep/=1e3/(dt||1),tick%10==1&amp;&amp;(elapseSpeed=stepsPerTick*timePerStep*1e3/(1e3/dt));for(let t=0;t&lt;stepsPerTick;t++)if(0!==stepsPerTick){for(let i=0;i&lt;bodies.length;i++)for(let o=i+1;o&lt;bodies.length;o++){let s=bodies[i].position.x-bodies[o].position.x,a=bodies[i].position.y-bodies[o].position.y,n=bodies[i].position.z-bodies[o].position.z,r=Math.sqrt(s**2+a**2+n**2)||1,$=constants.gravity*(bodies[i].mass*bodies[o].mass)/r**2;bodies[i].acceleration.x-=s/r*$/bodies[i].mass,bodies[i].acceleration.y-=a/r*$/bodies[i].mass,bodies[i].acceleration.z-=n/r*$/bodies[i].mass,bodies[o].acceleration.x+=s/r*$/bodies[o].mass,bodies[o].acceleration.y+=a/r*$/bodies[o].mass,bodies[o].acceleration.z+=n/r*$/bodies[o].mass}for(let c=0;c&lt;bodies.length;c++)bodies[c].velocity.x+=bodies[c].acceleration.x*timePerStep,bodies[c].velocity.y+=bodies[c].acceleration.y*timePerStep,bodies[c].velocity.z+=bodies[c].acceleration.z*timePerStep,bodies[c].position.x+=bodies[c].velocity.x*timePerStep,bodies[c].position.y+=bodies[c].velocity.y*timePerStep,bodies[c].position.z+=bodies[c].velocity.z*timePerStep,bodies[c].acceleration=new e.Vector3(0,0,0);if(t%200==0)for(let d=0;d&lt;bodies.length;d++)bodies[d].body.position.x=bodies[d].position.x*constants.scale,bodies[d].body.position.y=bodies[d].position.y*constants.scale,bodies[d].body.position.z=bodies[d].position.z*constants.scale,bodies[d].trailPoints.push(new e.Vector3(bodies[d].body.position.x,bodies[d].body.position.y,bodies[d].body.position.z)),bodies[d].trailPoints.length&gt;1e4&amp;&amp;bodies[d].trailPoints.shift()}for(let l=0;l&lt;bodies.length;l++)if(stepsPerTick&gt;0){&quot;object&quot;==typeof bodies[l].line&amp;&amp;scene.remove(bodies[l].line);let p=new e.Line(new e.BufferGeometry().setFromPoints(bodies[l].trailPoints),new e.LineBasicMaterial({color:16711935}));p.material.color.set(bodies[l].body.material.color),bodies[l].line=p,scene.add(p)}camera.position.x-=controls.target.x-space[camera.target].body.position.x,camera.position.y-=controls.target.y-space[camera.target].body.position.y,camera.position.z-=controls.target.z-space[camera.target].body.position.z,pointLight.position.x=space[camera.target].body.position.x,pointLight.position.y=space[camera.target].body.position.y,pointLight.position.z=space[camera.target].body.position.z,controls.target=new e.Vector3(space[camera.target].body.position.x,space[camera.target].body.position.y,space[camera.target].body.position.z),controls.update(),skybox.position.x=camera.position.x,skybox.position.y=camera.position.y,skybox.position.z=camera.position.z,textCanvas.width=renderer.domElement.width,textCanvas.height=renderer.domElement.height,txtctx.font=&quot;12px Courier New&quot;,txtctx.fillStyle=&quot;white&quot;;for(let m=0;m&lt;bodies.length;m++)objectTextVector.set(bodies[m].body.position.x+bodies[m].radius,bodies[m].body.position.y+bodies[m].radius,bodies[m].body.position.z+bodies[m].radius),objectTextVector.project(camera),objectTextVector.x=Math.round((objectTextVector.x+1)*textCanvas.width/2),objectTextVector.y=Math.round((-objectTextVector.y+1)*textCanvas.height/2),objectTextVector.z&lt;1&amp;&amp;txtctx.fillText(bodies[m].name,objectTextVector.x,objectTextVector.y);txtctx.font=&quot;20px Courier New&quot;,txtctx.fillStyle=&quot;white&quot;,txtctx.fillText(863e13&gt;simulationTime?new Date(simulationTime):`Around ${new Intl.NumberFormat(&quot;en&quot;,{notation:&quot;compact&quot;,minimumSignificantDigits:3,maximumSignificantDigits:3}).format(simulationTime/315576e5+30)} years into the future. . .`,20,20);let b=&quot;Error&quot;,y=1;elapseSpeed&lt;1?b=&quot;false&quot;:elapseSpeed&gt;=1&amp;&amp;elapseSpeed&lt;1.05?b=&quot;second&quot;:elapseSpeed&lt;60?b=&quot;seconds&quot;:elapseSpeed&gt;=60&amp;&amp;elapseSpeed&lt;63?(b=&quot;minute&quot;,y=60):elapseSpeed&lt;3600?(b=&quot;minutes&quot;,y=60):elapseSpeed&gt;=3600&amp;&amp;elapseSpeed&lt;3780?(b=&quot;hour&quot;,y=3600):elapseSpeed&lt;86500?(b=&quot;hours&quot;,y=3600):elapseSpeed&gt;=86500&amp;&amp;elapseSpeed&lt;90825?(b=&quot;day&quot;,y=86500):elapseSpeed&lt;31572500?(b=&quot;days&quot;,y=86500):elapseSpeed&gt;=31572500&amp;&amp;elapseSpeed&lt;33151125?(b=&quot;year&quot;,y=31572500):elapseSpeed&gt;31572500&amp;&amp;(b=&quot;years&quot;,y=31572500),&quot;false&quot;!=b?txtctx.fillText(new Intl.NumberFormat(&quot;en&quot;,{notation:&quot;compact&quot;,minimumSignificantDigits:1,maximumSignificantDigits:3}).format(elapseSpeed/y)+&quot; &quot;+b+&quot; per second&quot;,20,45):txtctx.fillText(&quot;No time is elapsing.&quot;,20,45),constants.simSpeed&gt;600&amp;&amp;(txtctx.fillStyle=&quot;yellow&quot;,txtctx.fillText(&quot;Warning: Simulation may not be stable at this speed&quot;,20,70));let x=distance(camera.position,space[camera.target].body.position);skybox.scale.set(x/200,x/200,x/200),camera.far=1e3*x,camera.near=.001*x,camera.updateProjectionMatrix(),renderer.render(scene,camera),requestAnimationFrame(animate)}animate(); // constants = { // simSpeed:0, // gravity:66743e-15, // scale:3e-10 // } // gui.destroy(); // You can edit the values here and remove planets and such const sun = new AstronomicalObject(&#39;Sun&#39;, 6.95700e8, 1.989e30, [0, 0, 0], [0, 0, 0]); sun.color.set(&#39;yellow&#39;); const mercury = new AstronomicalObject(&#39;Mercury&#39;, 2440500, 3.3010e23, [68426000000, 0, 0], [0, 47360, 0]); mercury.color.set(&#39;brown&#39;); mercury.position = rotateVector(mercury.position, 0, 0, 245.5 * Math.PI / 180); mercury.velocity = rotateVector(mercury.velocity, 0, 7.005 * Math.PI / 180, 245.5 * Math.PI / 180); const venus = new AstronomicalObject(&#39;Venus&#39;, 6051800, 4.8673e24, [107480000000, 0, 0], [0, 35020, 0]); venus.color.set(&#39;orange&#39;); venus.position = rotateVector(venus.position, 0, 0, 182 * Math.PI / 180); venus.velocity = rotateVector(venus.velocity, 0, 3.3947 * Math.PI / 180, 182 * Math.PI / 180); const earth = new AstronomicalObject(&#39;Earth&#39;, 6371000, 5.972e24, [151000000000, 0, 0], [0, 2.978589e4, 0]); //m/s earth.color.set(&#39;green&#39;); earth.position = rotateVector(earth.position, 0, 0, 109 * Math.PI / 180); earth.velocity = rotateVector(earth.velocity, 0, 0, 109 * Math.PI / 180); // Uncomment to add the Earth&#39;s moon // let moon = new AstronomicalObject(&quot;Moon&quot;, 1737400, 7.347e22, [151000000000 + 384399000, 0, 0], [0, 29800, 1022]); // moon.color.set(&#39;white&#39;); const mars = new AstronomicalObject(&#39;Mars&#39;, 3389500, 6.39e23, [213140000000, 0, 0], [0, 24070, 0]); mars.color.set(&#39;red&#39;); mars.position = rotateVector(mars.position, 0, 0, -1 * Math.PI / 180); mars.velocity = rotateVector(mars.velocity, 0, 1.851 * Math.PI / 180, -1 * Math.PI / 180); const jupiter = new AstronomicalObject(&#39;Jupiter&#39;, 66854000, 1.89813e27, [741690000000, 0, 0], [0, 13060, 0]); jupiter.color.set(&#39;pink&#39;); jupiter.position = rotateVector(jupiter.position, 0, 0, 40 * Math.PI / 180); jupiter.velocity = rotateVector(jupiter.velocity, 0, 1.305 * Math.PI / 180, 40 * Math.PI / 180); const saturn = new AstronomicalObject(&#39;Saturn&#39;, 60268000, 5.6832e26, [1.4737e12, 0, 0], [0, 9680, 0]); saturn.color.set(&#39;purple&#39;); saturn.position = rotateVector(saturn.position, 0, 0, 50 * Math.PI / 180); saturn.velocity = rotateVector(saturn.velocity, 0, 2.484 * Math.PI / 180, 50 * Math.PI / 180); const uranus = new AstronomicalObject(&#39;Uranus&#39;, 25559000, 8.6811e25, [2.9444e+12, 0, 0], [0, 6800, 0]); uranus.color.set(&#39;blue&#39;); uranus.position = rotateVector(uranus.position, 0, 0, 325 * Math.PI / 180); uranus.velocity = rotateVector(uranus.velocity, 0, 0.770 * Math.PI / 180, 325 * Math.PI / 180); const neptune = new AstronomicalObject(&#39;Neptune&#39;, 24341000, 1.02409e26, [4.558857e12, 0, 0], [0, 5430, 0]); neptune.color.set(&#39;magenta&#39;); neptune.position = rotateVector(neptune.position, 0, 0, 315 * Math.PI / 180); neptune.velocity = rotateVector(neptune.velocity, 0, 1.769 * Math.PI / 180, 315 * Math.PI / 180); const pluto = new AstronomicalObject(&#39;Pluto&#39;, 1188000, 1.02409e26, [7.304326e12, 0, 0], [0, 3710, 0]); pluto.color.set(&#39;white&#39;); pluto.position = rotateVector(pluto.position, 0, 0, 270 * Math.PI / 180); pluto.velocity = rotateVector(pluto.velocity, 0, 17.14 * Math.PI / 180, 270 * Math.PI / 180); end(); &lt;/script&gt; .",
          "url": "https://reem57.github.io/blog_new/space/",
          "relUrl": "/space/",
          "date": ""
      }
      
  

  

  
  

  
  

  

  
  

  
      ,"page14": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://reem57.github.io/blog_new/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}