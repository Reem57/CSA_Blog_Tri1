{
  
    
        "post0": {
            "title": "Week 3",
            "content": "Peer Grade: 2.7/3.0 . He had all the requirements for the week including the Conditionals and Boolean Expressions blog, The deployed website and the resume/CV. . Week 3 Requirements . Insight | Deployed Website | Reem Ben Ishai CV | Conditionals and Boolean Expressions | .",
            "url": "https://reem57.github.io/blog_new/markdown/2022/09/12/week3.html",
            "relUrl": "/markdown/2022/09/12/week3.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Conditionals and Boolean Expressions Blog",
            "content": "If, If else, If elseif else statements . if(1==1){ //checking if 1 is equal to one System.out.println(&quot;one is equal to one&quot;); //prints out the message if that is true } . one is equal to one . var num = 2; //creating a random variable (num) and assigning a value to it if (num == 1){ //checking to see if that value of the variable is equal to one System.out.println(&quot;num is equal to one&quot;); //if num is equal to one we want to print it out } else{ //if the if statement is NOT true proceed with this System.out.println(&quot;num is not equal to one&quot;); // if the value does not equal to one we want to also print that out } . num is not equal to one . var num = 15; //creating a random variable (num) and assigning a value to it if(num &lt; 10){ //checking to see if num is less than 10 System.out.println(&quot;num is less than 10&quot;); //print result } else if(num &gt; 10){ //checking to see if num is greater than 10 System.out.println(&quot;num is greater than 10&quot;); //print result } else{ //If both of the previous statements are false then the number has to equal to 10 System.out.println(&quot;num is equal to 10&quot;); //print result } . num is greater than 10 . switch-case . int randomNum = (int)(Math.random() * 6); // random number between 0 to 5 if(randomNum == 0){ //Checking if the random number is 0 System.out.println(&quot;The number is: 0&quot;); //printing out the random number if its 0 } else if(randomNum == 1){ //Checking if the random number is 1 System.out.println(&quot;The number is: 1&quot;); //printing out the random number if its 1 } else if(randomNum == 2){ //Checking if the random number is 2 System.out.println(&quot;The number is: 2&quot;); //printing out the random number if its 2 } else if(randomNum == 3){ //Checking if the random number is 3 System.out.println(&quot;The number is: 3&quot;); //printing out the random number if its 3 } else if(randomNum == 4){ //Checking if the random number is 4 System.out.println(&quot;The number is: 4&quot;); //printing out the random number if its 4 } else{ //if everything else is false then the number is five System.out.println(&quot;The number is: 5&quot;); //printing out the random number if its 5 } . The number is: 1 . lets put this into a different form called switch-case-otherwise . int randomNum = (int)(Math.random() * 6); // random number between 0 to 5 switch (randomNum) { case 0: //Checks if randomNum is equal to zero System.out.println(&quot;The number is: 0&quot;); //printing out the random number if its 0 break; //stops the code case 1: //Checks if randomNum is equal to one System.out.println(&quot;The number is: 1&quot;); //printing out the random number if its 1 break; //stops the code case 2: //Checks if randomNum is equal to two System.out.println(&quot;The number is: 2&quot;); //printing out the random number if its 2 break; //stops the code case 3: //Checks if randomNum is equal to three System.out.println(&quot;The number is: 3&quot;); //printing out the random number if its 3 break; //stops the code case 4: //Checks if randomNum is equal to four System.out.println(&quot;The number is: 4&quot;); //printing out the random number if its 3 break; //stops the code default: //If none of them are true then proceed System.out.println(&quot;The number is: 5&quot;); //printing out the random number if its 3 break; //stops the code } . The number is: 3 . De Morgan&#39;s law . Description: . The complement of the union of the two sets A and B will be equal to the intersection of A&#39; (complement of A) and B&#39; (complement of B). In simpler terms, the opposite of a and b is equal to the opposite of a or the opposite of b. The opposite of a or b is equal to the opposite of a and the opposite of b. . . var a = true; //creating a variable with a value of true var b = false; //creating a variable with a value of false if (!(a&amp;b) == !a|!b){ // checks if De Morgan&#39;s law is correct System.out.println(&quot;De Morgan&#39;s law is true&quot;); //prints out the result } . De Morgan&#39;s law is true . var a = true; //creating a variable with a value of true var b = false; //creating a variable with a value of false if (!(a|b) == !a&amp;!b){ // checks if De Morgan&#39;s law is correct System.out.println(&quot;De Morgan&#39;s law is true&quot;); //prints out the result } . De Morgan&#39;s law is true . var a = true; //creating a variable with a value of true var b = false; //creating a variable with a value of false if (!(a&amp;b) == !a&amp;!b){ // checks if De Morgan&#39;s law is correct System.out.println(&quot;De Morgan&#39;s law is not true&quot;); //prints out the result } else{ // if not true then proceed System.out.println(&quot;De Morgan&#39;s law is true&quot;); //prints out the result } . De Morgan&#39;s law is true .",
            "url": "https://reem57.github.io/blog_new/jupyter/2022/09/12/conditionals.html",
            "relUrl": "/jupyter/2022/09/12/conditionals.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Reem Ben Ishai CV",
            "content": "Aspiration . My passion is computer programming and algorithms. I am a hardworking and fast-learning student looking for an internship opportunity in a real-world working environment. I would love to contribute to the team&#39;s success by demonstrating and developing my skills. . Education . Junior (11th grade) in Del Norte High School | GPA - 4.19 ### 10th Grade Classes: AP Computer Science - College Credit | AP Calculus AB - College Credit | AP Chemistry - College Credit | Foreign Languages in a private high school - 4 years | English | History | . | . 11th Grade Classes: . AP Environmental Science - College Credit | AP Statistics - College Credit | AP Computer Science A - College Credit | Honors Principles of Engineering | English | History | . Experience &amp; Skills . Summer Classes/ Internships: Stanford two week intrologic course | Harvard three week coding summer classes | . | Professional Del Norte High School Clubs: Algorithmic Coding Club - Competes in the National American Computer Science League | Math Club - Competes in the National American Mathematics Competitions | . | Community Leadership and Volunteering: A group leader in scouts - leading a total of 15 4th graders on a weekly basis. | Del Norte Nighthawk Nation Club - contributing to the school social activities | . | Athletics: Competitive soccer in San Diego Force FC | Competes for the award-winning Del Norte High School Track and Field Team | . | Programing Languages: Python, JavaScript, Html, Css, Java | . | .",
            "url": "https://reem57.github.io/blog_new/markdown/2022/09/12/CV.html",
            "relUrl": "/markdown/2022/09/12/CV.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Week 2",
            "content": "Peer Grade: 2.7+/3.0 . He had all the requirements for the week including the code.org completion and the Java menu. On top of that he had stats calculator. . Week 2 Requirements . Insight | Java Menu | Stats Calculator | . Code.org: . .",
            "url": "https://reem57.github.io/blog_new/markdown/2022/09/06/week2.html",
            "relUrl": "/markdown/2022/09/06/week2.html",
            "date": " • Sep 6, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Java Menu",
            "content": "import java.util.Scanner; //library for user input import java.lang.Math; //library for random numbers public class Menu { // Instance Variables public final String DEFAULT = &quot; u001B[0m&quot;; // Default Terminal Color public final String[][] COLORS = { // 2D Array of ANSI Terminal Colors {&quot;Default&quot;,DEFAULT}, {&quot;Red&quot;, &quot; u001B[31m&quot;}, {&quot;Green&quot;, &quot; u001B[32m&quot;}, {&quot;Yellow&quot;, &quot; u001B[33m&quot;}, {&quot;Blue&quot;, &quot; u001B[34m&quot;}, {&quot;Purple&quot;, &quot; u001B[35m&quot;}, {&quot;Cyan&quot;, &quot; u001B[36m&quot;}, {&quot;White&quot;, &quot; u001B[37m&quot;}, }; // 2D column location for data public final int NAME = 0; public final int ANSI = 1; // ANSI is the &quot;standard&quot; for terminal codes // Constructor on this Object takes control of menu events and actions public Menu() { Scanner sc = new Scanner(System.in); // using Java Scanner Object this.print(); // print Menu boolean quit = false; while (!quit) { try { // scan for Input int choice = sc.nextInt(); // using method from Java Scanner Object System.out.print(&quot;&quot; + choice + &quot;: &quot;); quit = this.action(choice); // take action } catch (Exception e) { sc.nextLine(); // error: clear buffer System.out.println(e + &quot;: Not a number, try again.&quot;); } } sc.close(); } // Print the menu options to Terminal private void print() { //System.out.println commands below is used to present a Menu to the user. System.out.println(&quot;__ n&quot;); System.out.println(&quot;Choose from these choices:&quot;); System.out.println(&quot;__ n&quot;); System.out.println(&quot;1 - Say Hello&quot;); System.out.println(&quot;2 - Output colors&quot;); System.out.println(&quot;3 - Loading in color&quot;); System.out.println(&quot;4 - Factorial Calculator&quot;); System.out.println(&quot;5 - Degrees to Radians&quot;); System.out.println(&quot;6 - Grade Calculator&quot;); System.out.println(&quot;0 - Quit&quot;); System.out.println(&quot;__ n&quot;); } // Private method to perform action and return true if action is to quit/exit private boolean action(int selection) { boolean quit = false; switch (selection) { // Switch or Switch/Case is Control Flow statement and is used to evaluate the user selection case 0: System.out.print(&quot;Goodbye, World!&quot;); quit = true; break; case 1: System.out.print(&quot;Hello, World!&quot;); break; case 2: for(int i = 0; i &lt; COLORS.length; i++) // loop through COLORS array System.out.print(COLORS[i][ANSI] + COLORS[i][NAME]); break; case 3: System.out.print(&quot;Loading...&quot;); for (int i = 0; i &lt; 10; i++) { // fixed length loading bar int random = (int) (Math.random() COLORS.length); // random logic try { Thread.sleep(100); // delay for loading } catch (Exception e) { System.out.println(e); } System.out.print(COLORS[random][ANSI] + &quot;Hey! &quot;); } break; case 4: System.out.print(&quot;Enter an Integer:&quot;); Scanner myObj = new Scanner(System.in); int number = myObj.nextInt(); int i,fact=1; for(i=1;i&lt;=number;i++){ fact=facti; } System.out.println(&quot; nFactorial of &quot;+number+&quot; is: &quot;+fact); break; case 5: System.out.print(&quot;Enter a Degree Value:&quot;); Scanner myObj2 = new Scanner(System.in); double number2 = myObj2.nextDouble(); double radians = Math.toRadians(number2); System.out.println(&quot; nValue in Radians = &quot; + String.format(&quot;%.2f&quot;, radians)); break; case 6: /* This program assumes that the student has 6 subjects, . * thats why I have created the array of size 6. You can * change this as per the requirement. */ int marks[] = new int[5]; float total=0, avg; Scanner scanner = new Scanner(System.in); for(i=0; i&lt;5; i++) { System.out.print(&quot;Enter Grade for Period &quot;+(i+1)+&quot;: &quot;); int test = scanner.nextInt(); marks[i] = test; System.out.println(test); System.out.println(marks[i]); total = total + marks[i]; } scanner.close(); //Calculating average here avg = total/5; System.out.println(&quot;The student Grade is: &quot;); if(avg&gt;=80) { System.out.println(&quot;A &quot; + avg); } else if(avg&gt;=60 &amp;&amp; avg&lt;80){ System.out.println(&quot;B &quot; + avg); } else if(avg&gt;=40 &amp;&amp; avg&lt;60){ System.out.println(&quot;C &quot; + avg); } else{ System.out.println(&quot;D &quot; + avg); } break; default: //Prints error message from console System.out.print(&quot;Unexpected choice, try again.&quot;); } System.out.println(DEFAULT); // make sure to reset color and provide new line return quit; } // Static driver/tester method static public void main(String[] args) { new Menu(); // starting Menu object } . } Menu.main(null); .",
            "url": "https://reem57.github.io/blog_new/2022/09/06/javaMenu.html",
            "relUrl": "/2022/09/06/javaMenu.html",
            "date": " • Sep 6, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Week 1",
            "content": "Self Grade: 2.8/3.0 . Self Grade since Valen left the group. I added dark mode, experimented and got my own GPA Calculator on top of all the requirements. . Week 1 Requirements . Insight | College Board Year Plan | Java Primitives | Tool Checks | | .",
            "url": "https://reem57.github.io/blog_new/markdown/2022/08/29/week1.html",
            "relUrl": "/markdown/2022/08/29/week1.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Aluminai Panel",
            "content": "how did you know you wanted to do your major? . Love for problem solving | started from a young age | through internships | logical thinking background | Robotics team was interesting | Helped with web design | gave a little kickstart | made own games | applied the knowledge from the games to the real world. | . What is the biggest challenge you have encountered with CS? . keeping up the motivation | Errors and bugs that people couldn’t solve | focus on your own path | don’t worry about what other people are doing | There is always someone that is better than you | syntax is annoying | Google can be helpful with a lot of questions that you have | temptation to cheat (don’t cut corners) | willing to get started with coding | . Are there any PBL scenarios in college . One at the beginning of the four years and one at the end | will differently show up | study in groups to try to understand better PBL | Same structure in a lot of college classes | find your style of how to do PBL | Try to make it more efficient and less painful | . How have you applied CS in your major . MatLab is used a lot | 3D can use code | advance math classes can use CS a lot | Jupiter Notebook is used for a technical paper | Stats and psychology uses a lot of programming | . For existing college students have you had a job with school or professor? . how do you make yourself different | TA, internships, Tutor, | . Summary: . Try to cut as much less corners to increase your experience. Put yourself out there and differ from others with internships, clubs, jobs, TA, Tutoring, and more. Keep motivated and takes breaks when you need to in order to fix annoying bugs. Search things that you don’t know on Google. Computer Science is very important in a lot of majors, especially STEM. .",
            "url": "https://reem57.github.io/blog_new/markdown/2022/08/29/Aluminai.html",
            "relUrl": "/markdown/2022/08/29/Aluminai.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Year Plan",
            "content": "Big Ideas . There are 58 sub units overall that need to be covered until the AP Exam on May 3rd (35 weeks including breaks). So every week I will have to complete and take notes on two sub units in college board. Then I will have up to 6 weeks of preparation for the AP Exam. . Weekly basis: . My week consists of things that I can&#39;t move like soccer practice on Monday and Wednesday, scouts on sunday and more. So I will make a schedule of taking notes based on the the amount of &quot;free time&quot; I have those days. . Tuesday: Take notes on one sub unit and summarize it on the blog | Thursday: Take notes on another sub unit and summarize it on the blog | Every end of a Unit: Review the content and write a quick summer of the content. | Last Weeks before the AP Exam . Find some MC online and practice it | Practice free response questions | Take 3 mock tests before the real deal | Ask Questions about anything that I am confused about. | .",
            "url": "https://reem57.github.io/blog_new/jupyter/2022/08/28/yearPlan.html",
            "relUrl": "/jupyter/2022/08/28/yearPlan.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Java Primitives",
            "content": "public class DefinePrimitives { public static void main(String[] args) { int anInt = 100; double aDouble = 89.9; boolean aBoolean = true; // not primitives but essential String aString = &quot;Hello, World!&quot;; // wrapper class shortcut assignment String aStringFormal = new String(&quot;Greetings, World!&quot;); System.out.println(&quot;anInt: &quot; + anInt); System.out.println(&quot;aDouble: &quot; + aDouble); System.out.println(&quot;aBoolean: &quot; + aBoolean); System.out.println(&quot;aString: &quot; + aString); System.out.println(&quot;aStringFormal: &quot; + aStringFormal); } } DefinePrimitives.main(null) . anInt: 100 aDouble: 89.9 aBoolean: true aString: Hello, World! aStringFormal: Greetings, World! . public class PrimitiveDivision { public static void main(String[] args) { int i1 = 7, i2 = 2; System.out.println(&quot;Integer Division&quot;); System.out.println(&quot; tint output with concatenation: &quot; + i1 + &quot;/&quot; + i2 + &quot; = &quot; + i1/i2); System.out.println(String.format(&quot; tint output with format: %d/%d = %d&quot;,i1, i2, i1/i2)); System.out.printf(&quot; tint output with printf: %d/%d = %d n&quot;,i1, i2, i1/i2); double d1 = 7, d2 = 2; System.out.println(&quot;Double Division&quot;); System.out.println(&quot; tdouble output with concatenation: &quot; + d1 + &quot;/&quot; + d2 + &quot; = &quot; + d1/d2); System.out.println(String.format(&quot; tdouble output with format: %.2f/%.2f = %.2f&quot;,d1, d2, d1/d2)); System.out.printf(&quot; tdouble output with printf: %.2f/%.2f = %.2f n&quot;,d1, d2, d1/d2); System.out.println(&quot;Casting and Remainders&quot;); System.out.printf(&quot; tint cast to double on division: %d/%d = %.2f n&quot;,i1, i2, i1/(double)i2); System.out.println(&quot; tint using modulo for remainder: &quot; + i1 + &quot;/&quot; + i2 + &quot; = &quot; + i1/i2 + &quot; remainder &quot; + i1%i2); } } PrimitiveDivision.main(null); . Integer Division int output with concatenation: 7/2 = 3 int output with format: 7/2 = 3 int output with printf: 7/2 = 3 Double Division double output with concatenation: 7.0/2.0 = 3.5 double output with format: 7.00/2.00 = 3.50 double output with printf: 7.00/2.00 = 3.50 Casting and Remainders int cast to double on division: 7/2 = 3.50 int using modulo for remainder: 7/2 = 3 remainder 1 . // java style to import library import java.util.Scanner; // class must alway have 1st letter as uppercase, CamelCase is Java Class convention public class ScanPrimitives { public static void main(String[] args) { Scanner input; // primitive int input = new Scanner(System.in); System.out.print(&quot;Enter an integer: &quot;); try { int sampleInputInt = input.nextInt(); System.out.println(sampleInputInt); } catch (Exception e) { // if not an integer System.out.println(&quot;This is not an integer&quot;); } input.close(); // primitive double input = new Scanner(System.in); System.out.print(&quot;Enter a double: &quot;); try { double sampleInputDouble = input.nextDouble(); System.out.println(sampleInputDouble); } catch (Exception e) { // if not a number System.out.println(&quot;Not an double (form like 9.99), &quot; + e); } input.close(); // primitive boolean input = new Scanner(System.in); System.out.print(&quot;Enter a boolean: &quot;); try { boolean sampleInputBoolean = input.nextBoolean(); System.out.println(sampleInputBoolean); } catch (Exception e) { // if not true or false System.out.println(&quot;Not an boolean (true or false), &quot; + e); } input.close(); // wrapper class String input = new Scanner(System.in); System.out.print(&quot;Enter a String: &quot;); try { String sampleInputString = input.nextLine(); System.out.println(sampleInputString); } catch (Exception e) { // this may never happen System.out.println(&quot;Not an String, &quot; + e); } input.close(); } } ScanPrimitives.main(null); . Enter an integer: Not an integer (form like 159), java.util.InputMismatchException Enter a double: 7.9 Enter a boolean: true Enter a String: false . Integer - a number value non negative and not a decimal | Double - A number value with a decimal | Boolean - True or False values that are usually used in if statements | string - Any character that the computer can print | . GPA Calculator . public class GPACalculator{ // introduction to Double wrapper class (object) ArrayList&lt;Double&gt; grades; // similar to Python list // constructor, initializes ArrayList and call enterGrades method public GPACalculator() { this.grades = new ArrayList&lt;&gt;(); this.enterGrades(); } // enterGrades input method using scanner double average = 0; private double enterGrades() { Scanner input; input = new Scanner(System.in); System.out.print(&quot;How many classes have you taken: n&quot;); try { double classNum = input.nextInt(); for (int i = 0; i &lt; classNum; i++) { input = new Scanner(System.in); System.out.print(&quot;Enter your credits for each class (1-5): &quot;); try { double sampleInputDouble = input.nextDouble(); System.out.println(sampleInputDouble); this.grades.add(sampleInputDouble); } catch (Exception e) { // if not a number System.out.println(&quot;Not an double (form like 9.99), &quot; + e); } input.close(); } double total = 0; // running total for (double num : this.grades) { // enhanced for loop total += num; // shortcut add and assign operator } average = total/ classNum; } catch (Exception e) { // if not an integer System.out.println(&quot;This is not an integer&quot;); } return average; // double math, ArrayList grades object maintains its size } // average calculation public double average() { return (average); // double math, ArrayList grades object maintains its size } public static void main(String[] args) { GPACalculator grades = new GPACalculator(); // calls constructor, creates object, which calls enterGrades System.out.println(&quot;Average: &quot; + String.format(&quot;%.2f&quot;, grades.average())); // format used to standardize to two decimal points } } // IJava activation GPACalculator.main(null); . How many classes have you taken: Enter your credits for each class (1-5): 5.0 Enter your credits for each class (1-5): 4.0 Enter your credits for each class (1-5): 5.0 Enter your credits for each class (1-5): 4.0 Average: 4.50 .",
            "url": "https://reem57.github.io/blog_new/jupyter/2022/08/28/primitives.html",
            "relUrl": "/jupyter/2022/08/28/primitives.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Installation Checks",
            "content": "Python Checks . python --version python2 --version python3 --version . Python 3.9.12 Python 2.7.18 Python 3.9.12 . Conda Pack . conda list . # packages in environment at /home/reem57/anaconda3: # # Name Version Build Channel _ipyw_jlab_nb_ext_conf 0.1.0 py39h06a4308_1 _libgcc_mutex 0.1 main _openmp_mutex 4.5 1_gnu aiohttp 3.8.1 py39h7f8727e_1 aiosignal 1.2.0 pyhd3eb1b0_0 alabaster 0.7.12 pyhd3eb1b0_0 anaconda 2022.05 py39_0 anaconda-client 1.9.0 py39h06a4308_0 anaconda-navigator 2.1.4 py39h06a4308_0 anaconda-project 0.10.2 pyhd3eb1b0_0 anyio 3.5.0 py39h06a4308_0 appdirs 1.4.4 pyhd3eb1b0_0 argon2-cffi 21.3.0 pyhd3eb1b0_0 argon2-cffi-bindings 21.2.0 py39h7f8727e_0 arrow 1.2.2 pyhd3eb1b0_0 astroid 2.6.6 py39h06a4308_0 astropy 5.0.4 py39hce1f21e_0 asttokens 2.0.5 pyhd3eb1b0_0 async-timeout 4.0.1 pyhd3eb1b0_0 atomicwrites 1.4.0 py_0 attrs 21.4.0 pyhd3eb1b0_0 automat 20.2.0 py_0 autopep8 1.6.0 pyhd3eb1b0_0 babel 2.9.1 pyhd3eb1b0_0 backcall 0.2.0 pyhd3eb1b0_0 backports 1.1 pyhd3eb1b0_0 backports.functools_lru_cache 1.6.4 pyhd3eb1b0_0 backports.tempfile 1.0 pyhd3eb1b0_1 backports.weakref 1.0.post1 py_1 bash-kernel 0.7.2 pypi_0 pypi bcrypt 3.2.0 py39he8ac12f_0 beautifulsoup4 4.11.1 py39h06a4308_0 binaryornot 0.4.4 pyhd3eb1b0_1 bitarray 2.4.1 py39h7f8727e_0 bkcharts 0.2 py39h06a4308_0 black 19.10b0 py_0 blas 1.0 mkl bleach 4.1.0 pyhd3eb1b0_0 blosc 1.21.0 h8c45485_0 bokeh 2.4.2 py39h06a4308_0 boto3 1.21.32 pyhd3eb1b0_0 botocore 1.24.32 pyhd3eb1b0_0 bottleneck 1.3.4 py39hce1f21e_0 brotli 1.0.9 he6710b0_2 brotlipy 0.7.0 py39h27cfd23_1003 brunsli 0.1 h2531618_0 bzip2 1.0.8 h7b6447c_0 c-ares 1.18.1 h7f8727e_0 ca-certificates 2022.3.29 h06a4308_1 cachetools 4.2.2 pyhd3eb1b0_0 certifi 2021.10.8 py39h06a4308_2 cffi 1.15.0 py39hd667e15_1 cfitsio 3.470 hf0d0db6_6 chardet 4.0.0 py39h06a4308_1003 charls 2.2.0 h2531618_0 charset-normalizer 2.0.4 pyhd3eb1b0_0 click 8.0.4 py39h06a4308_0 cloudpickle 2.0.0 pyhd3eb1b0_0 clyent 1.2.2 py39h06a4308_1 colorama 0.4.4 pyhd3eb1b0_0 colorcet 2.0.6 pyhd3eb1b0_0 conda 4.13.0 py39h06a4308_0 conda-build 3.21.8 py39h06a4308_2 conda-content-trust 0.1.1 pyhd3eb1b0_0 conda-env 2.6.0 1 conda-pack 0.6.0 pyhd3eb1b0_0 conda-package-handling 1.8.1 py39h7f8727e_0 conda-repo-cli 1.0.4 pyhd3eb1b0_0 conda-token 0.3.0 pyhd3eb1b0_0 conda-verify 3.4.2 py_1 constantly 15.1.0 pyh2b92418_0 cookiecutter 1.7.3 pyhd3eb1b0_0 cryptography 3.4.8 py39hd23ed53_0 cssselect 1.1.0 pyhd3eb1b0_0 curl 7.82.0 h7f8727e_0 cycler 0.11.0 pyhd3eb1b0_0 cython 0.29.28 py39h295c915_0 cytoolz 0.11.0 py39h27cfd23_0 daal4py 2021.5.0 py39h78b71dc_0 dal 2021.5.1 h06a4308_803 dask 2022.2.1 pyhd3eb1b0_0 dask-core 2022.2.1 pyhd3eb1b0_0 dataclasses 0.8 pyh6d0b6a4_7 datashader 0.13.0 pyhd3eb1b0_1 datashape 0.5.4 py39h06a4308_1 dbus 1.13.18 hb2f20db_0 debugpy 1.5.1 py39h295c915_0 decorator 5.1.1 pyhd3eb1b0_0 defusedxml 0.7.1 pyhd3eb1b0_0 diff-match-patch 20200713 pyhd3eb1b0_0 distributed 2022.2.1 pyhd3eb1b0_0 docutils 0.17.1 py39h06a4308_1 entrypoints 0.4 py39h06a4308_0 et_xmlfile 1.1.0 py39h06a4308_0 executing 0.8.3 pyhd3eb1b0_0 expat 2.4.4 h295c915_0 filelock 3.6.0 pyhd3eb1b0_0 flake8 3.9.2 pyhd3eb1b0_0 flask 1.1.2 pyhd3eb1b0_0 fontconfig 2.13.1 h6c09931_0 fonttools 4.25.0 pyhd3eb1b0_0 freetype 2.11.0 h70c0345_0 frozenlist 1.2.0 py39h7f8727e_0 fsspec 2022.2.0 pyhd3eb1b0_0 future 0.18.2 py39h06a4308_1 gensim 4.1.2 py39h295c915_0 giflib 5.2.1 h7b6447c_0 glib 2.69.1 h4ff587b_1 glob2 0.7 pyhd3eb1b0_0 gmp 6.2.1 h2531618_2 gmpy2 2.1.2 py39heeb90bb_0 google-api-core 1.25.1 pyhd3eb1b0_0 google-auth 1.33.0 pyhd3eb1b0_0 google-cloud-core 1.7.1 pyhd3eb1b0_0 google-cloud-storage 1.31.0 py_0 google-crc32c 1.1.2 py39h27cfd23_0 google-resumable-media 1.3.1 pyhd3eb1b0_1 googleapis-common-protos 1.53.0 py39h06a4308_0 greenlet 1.1.1 py39h295c915_0 grpcio 1.42.0 py39hce63b2e_0 gst-plugins-base 1.14.0 h8213a91_2 gstreamer 1.14.0 h28cd5cc_2 h5py 3.6.0 py39ha0f2276_0 hdf5 1.10.6 hb1b8bf9_0 heapdict 1.0.1 pyhd3eb1b0_0 holoviews 1.14.8 pyhd3eb1b0_0 hvplot 0.7.3 pyhd3eb1b0_1 hyperlink 21.0.0 pyhd3eb1b0_0 icu 58.2 he6710b0_3 idna 3.3 pyhd3eb1b0_0 imagecodecs 2021.8.26 py39h4cda21f_0 imageio 2.9.0 pyhd3eb1b0_0 imagesize 1.3.0 pyhd3eb1b0_0 importlib-metadata 4.11.3 py39h06a4308_0 importlib_metadata 4.11.3 hd3eb1b0_0 incremental 21.3.0 pyhd3eb1b0_0 inflection 0.5.1 py39h06a4308_0 iniconfig 1.1.1 pyhd3eb1b0_0 intake 0.6.5 pyhd3eb1b0_0 intel-openmp 2021.4.0 h06a4308_3561 intervaltree 3.1.0 pyhd3eb1b0_0 ipykernel 6.9.1 py39h06a4308_0 ipython 8.2.0 py39h06a4308_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 ipywidgets 7.6.5 pyhd3eb1b0_1 isort 5.9.3 pyhd3eb1b0_0 itemadapter 0.3.0 pyhd3eb1b0_0 itemloaders 1.0.4 pyhd3eb1b0_1 itsdangerous 2.0.1 pyhd3eb1b0_0 jdcal 1.4.1 pyhd3eb1b0_0 jedi 0.18.1 py39h06a4308_1 jeepney 0.7.1 pyhd3eb1b0_0 jinja2 2.11.3 pyhd3eb1b0_0 jinja2-time 0.2.0 pyhd3eb1b0_3 jmespath 0.10.0 pyhd3eb1b0_0 joblib 1.1.0 pyhd3eb1b0_0 jpeg 9e h7f8727e_0 jq 1.6 h27cfd23_1000 json5 0.9.6 pyhd3eb1b0_0 jsonschema 4.4.0 py39h06a4308_0 jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 jxrlib 1.1 h7b6447c_2 keyring 23.4.0 py39h06a4308_0 kiwisolver 1.3.2 py39h295c915_0 krb5 1.19.2 hac12032_0 lazy-object-proxy 1.6.0 py39h27cfd23_0 lcms2 2.12 h3be6417_0 ld_impl_linux-64 2.35.1 h7274673_9 lerc 3.0 h295c915_0 libaec 1.0.4 he6710b0_1 libarchive 3.4.2 h62408e4_0 libcrc32c 1.1.1 he6710b0_2 libcurl 7.82.0 h0b77cf5_0 libdeflate 1.8 h7f8727e_5 libedit 3.1.20210910 h7f8727e_0 libev 4.33 h7f8727e_1 libffi 3.3 he6710b0_2 libgcc 7.2.0 h69d50b8_2 libgcc-ng 9.3.0 h5101ec6_17 libgfortran-ng 7.5.0 ha8ba4b0_17 libgfortran4 7.5.0 ha8ba4b0_17 libgomp 9.3.0 h5101ec6_17 libidn2 2.3.2 h7f8727e_0 liblief 0.11.5 h295c915_1 libllvm11 11.1.0 h3826bc1_1 libnghttp2 1.46.0 hce63b2e_0 libpng 1.6.37 hbc83047_0 libprotobuf 3.19.1 h4ff587b_0 libsodium 1.0.18 h7b6447c_0 libspatialindex 1.9.3 h2531618_0 libssh2 1.10.0 h8f2d780_0 libstdcxx-ng 9.3.0 hd4cf53a_17 libtiff 4.2.0 h85742a9_0 libunistring 0.9.10 h27cfd23_0 libuuid 1.0.3 h7f8727e_2 libwebp 1.2.2 h55f646e_0 libwebp-base 1.2.2 h7f8727e_0 libxcb 1.14 h7b6447c_0 libxml2 2.9.12 h03d6c58_0 libxslt 1.1.34 hc22bd24_0 libzopfli 1.0.3 he6710b0_0 llvmlite 0.38.0 py39h4ff587b_0 locket 0.2.1 py39h06a4308_2 lxml 4.8.0 py39h1f438cf_0 lz4-c 1.9.3 h295c915_1 lzo 2.10 h7b6447c_2 markdown 3.3.4 py39h06a4308_0 markupsafe 2.0.1 py39h27cfd23_0 matplotlib 3.5.1 py39h06a4308_1 matplotlib-base 3.5.1 py39ha18d171_1 matplotlib-inline 0.1.2 pyhd3eb1b0_2 mccabe 0.6.1 py39h06a4308_1 mistune 0.8.4 py39h27cfd23_1000 mkl 2021.4.0 h06a4308_640 mkl-service 2.4.0 py39h7f8727e_0 mkl_fft 1.3.1 py39hd3c417c_0 mkl_random 1.2.2 py39h51133e4_0 mock 4.0.3 pyhd3eb1b0_0 mpc 1.1.0 h10f8cd9_1 mpfr 4.0.2 hb69a4c5_1 mpi 1.0 mpich mpich 3.3.2 hc856adb_0 mpmath 1.2.1 py39h06a4308_0 msgpack-python 1.0.2 py39hff7bd54_1 multidict 5.2.0 py39h7f8727e_2 multipledispatch 0.6.0 py39h06a4308_0 munkres 1.1.4 py_0 mypy_extensions 0.4.3 py39h06a4308_1 navigator-updater 0.2.1 py39_1 nbclassic 0.3.5 pyhd3eb1b0_0 nbclient 0.5.13 py39h06a4308_0 nbconvert 6.4.4 py39h06a4308_0 nbformat 5.3.0 py39h06a4308_0 ncurses 6.3 h7f8727e_2 nest-asyncio 1.5.5 py39h06a4308_0 networkx 2.7.1 pyhd3eb1b0_0 nltk 3.7 pyhd3eb1b0_0 nodejs 6.11.2 h3db8ef7_0 nose 1.3.7 pyhd3eb1b0_1008 notebook 6.4.8 py39h06a4308_0 numba 0.55.1 py39h51133e4_0 numexpr 2.8.1 py39h6abb31d_0 numpy 1.21.5 py39he7a7128_1 numpy-base 1.21.5 py39hf524024_1 numpydoc 1.2 pyhd3eb1b0_0 olefile 0.46 pyhd3eb1b0_0 oniguruma 6.9.7.1 h27cfd23_0 openjpeg 2.4.0 h3ad879b_0 openpyxl 3.0.9 pyhd3eb1b0_0 openssl 1.1.1n h7f8727e_0 packaging 21.3 pyhd3eb1b0_0 pandas 1.4.2 py39h295c915_0 pandocfilters 1.5.0 pyhd3eb1b0_0 panel 0.13.0 py39h06a4308_0 param 1.12.0 pyhd3eb1b0_0 parsel 1.6.0 py39h06a4308_0 parso 0.8.3 pyhd3eb1b0_0 partd 1.2.0 pyhd3eb1b0_1 patchelf 0.13 h295c915_0 pathspec 0.7.0 py_0 patsy 0.5.2 py39h06a4308_1 pcre 8.45 h295c915_0 pep8 1.7.1 py39h06a4308_0 pexpect 4.8.0 pyhd3eb1b0_3 pickleshare 0.7.5 pyhd3eb1b0_1003 pillow 9.0.1 py39h22f2fdc_0 pip 21.2.4 py39h06a4308_0 pkginfo 1.8.2 pyhd3eb1b0_0 plotly 5.6.0 pyhd3eb1b0_0 pluggy 1.0.0 py39h06a4308_1 poyo 0.5.0 pyhd3eb1b0_0 prometheus_client 0.13.1 pyhd3eb1b0_0 prompt-toolkit 3.0.20 pyhd3eb1b0_0 prompt_toolkit 3.0.20 hd3eb1b0_0 protego 0.1.16 py_0 protobuf 3.19.1 py39h295c915_0 psutil 5.8.0 py39h27cfd23_1 ptyprocess 0.7.0 pyhd3eb1b0_2 pure_eval 0.2.2 pyhd3eb1b0_0 py 1.11.0 pyhd3eb1b0_0 py-lief 0.11.5 py39h295c915_1 pyasn1 0.4.8 pyhd3eb1b0_0 pyasn1-modules 0.2.8 py_0 pycodestyle 2.7.0 pyhd3eb1b0_0 pycosat 0.6.3 py39h27cfd23_0 pycparser 2.21 pyhd3eb1b0_0 pyct 0.4.6 py39h06a4308_0 pycurl 7.44.1 py39h8f2d780_1 pydispatcher 2.0.5 py39h06a4308_2 pydocstyle 6.1.1 pyhd3eb1b0_0 pyerfa 2.0.0 py39h27cfd23_0 pyflakes 2.3.1 pyhd3eb1b0_0 pygments 2.11.2 pyhd3eb1b0_0 pyhamcrest 2.0.2 pyhd3eb1b0_2 pyjwt 2.1.0 py39h06a4308_0 pylint 2.9.6 py39h06a4308_1 pyls-spyder 0.4.0 pyhd3eb1b0_0 pyodbc 4.0.32 py39h295c915_1 pyopenssl 21.0.0 pyhd3eb1b0_1 pyparsing 3.0.4 pyhd3eb1b0_0 pyqt 5.9.2 py39h2531618_6 pyrsistent 0.18.0 py39heee7806_0 pysocks 1.7.1 py39h06a4308_0 pytables 3.6.1 py39h77479fe_1 pytest 7.1.1 py39h06a4308_0 python 3.9.12 h12debd9_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h2531618_3 pytz 2021.3 pyhd3eb1b0_0 pyviz_comms 2.0.2 pyhd3eb1b0_0 pywavelets 1.3.0 py39h7f8727e_0 pyxdg 0.27 pyhd3eb1b0_0 pyyaml 6.0 py39h7f8727e_1 pyzmq 22.3.0 py39h295c915_2 qdarkstyle 3.0.2 pyhd3eb1b0_0 qstylizer 0.1.10 pyhd3eb1b0_0 qt 5.9.7 h5867ecd_1 qtawesome 1.0.3 pyhd3eb1b0_0 qtconsole 5.3.0 pyhd3eb1b0_0 qtpy 2.0.1 pyhd3eb1b0_0 queuelib 1.5.0 py39h06a4308_0 readline 8.1.2 h7f8727e_1 regex 2022.3.15 py39h7f8727e_0 requests 2.27.1 pyhd3eb1b0_0 requests-file 1.5.1 pyhd3eb1b0_0 ripgrep 12.1.1 0 rope 0.22.0 pyhd3eb1b0_0 rsa 4.7.2 pyhd3eb1b0_1 rtree 0.9.7 py39h06a4308_1 ruamel_yaml 0.15.100 py39h27cfd23_0 s3transfer 0.5.0 pyhd3eb1b0_0 scikit-image 0.19.2 py39h51133e4_0 scikit-learn 1.0.2 py39h51133e4_1 scikit-learn-intelex 2021.5.0 py39h06a4308_0 scipy 1.7.3 py39hc147768_0 scrapy 2.6.1 py39h06a4308_0 seaborn 0.11.2 pyhd3eb1b0_0 secretstorage 3.3.1 py39h06a4308_0 send2trash 1.8.0 pyhd3eb1b0_1 service_identity 18.1.0 pyhd3eb1b0_1 setuptools 61.2.0 py39h06a4308_0 sip 4.19.13 py39h295c915_0 six 1.16.0 pyhd3eb1b0_1 smart_open 5.1.0 pyhd3eb1b0_0 snappy 1.1.9 h295c915_0 sniffio 1.2.0 py39h06a4308_1 snowballstemmer 2.2.0 pyhd3eb1b0_0 sortedcollections 2.1.0 pyhd3eb1b0_0 sortedcontainers 2.4.0 pyhd3eb1b0_0 soupsieve 2.3.1 pyhd3eb1b0_0 sphinx 4.4.0 pyhd3eb1b0_0 sphinxcontrib-applehelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-devhelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-htmlhelp 2.0.0 pyhd3eb1b0_0 sphinxcontrib-jsmath 1.0.1 pyhd3eb1b0_0 sphinxcontrib-qthelp 1.0.3 pyhd3eb1b0_0 sphinxcontrib-serializinghtml 1.1.5 pyhd3eb1b0_0 spyder 5.1.5 py39h06a4308_1 spyder-kernels 2.1.3 py39h06a4308_0 sqlalchemy 1.4.32 py39h7f8727e_0 sqlite 3.38.2 hc218d9a_0 stack_data 0.2.0 pyhd3eb1b0_0 statsmodels 0.13.2 py39h7f8727e_0 sympy 1.10.1 py39h06a4308_0 tabulate 0.8.9 py39h06a4308_0 tbb 2021.5.0 hd09550d_0 tbb4py 2021.5.0 py39hd09550d_0 tblib 1.7.0 pyhd3eb1b0_0 tenacity 8.0.1 py39h06a4308_0 terminado 0.13.1 py39h06a4308_0 testpath 0.5.0 pyhd3eb1b0_0 text-unidecode 1.3 pyhd3eb1b0_0 textdistance 4.2.1 pyhd3eb1b0_0 threadpoolctl 2.2.0 pyh0d69192_0 three-merge 0.1.1 pyhd3eb1b0_0 tifffile 2021.7.2 pyhd3eb1b0_2 tinycss 0.4 pyhd3eb1b0_1002 tk 8.6.11 h1ccaba5_0 tldextract 3.2.0 pyhd3eb1b0_0 toml 0.10.2 pyhd3eb1b0_0 tomli 1.2.2 pyhd3eb1b0_0 toolz 0.11.2 pyhd3eb1b0_0 tornado 6.1 py39h27cfd23_0 tqdm 4.64.0 py39h06a4308_0 traitlets 5.1.1 pyhd3eb1b0_0 twisted 22.2.0 py39h7f8727e_0 typed-ast 1.4.3 py39h7f8727e_1 typing-extensions 4.1.1 hd3eb1b0_0 typing_extensions 4.1.1 pyh06a4308_0 tzdata 2022a hda174b7_0 ujson 5.1.0 py39h295c915_0 unidecode 1.2.0 pyhd3eb1b0_0 unixodbc 2.3.9 h7b6447c_0 urllib3 1.26.9 py39h06a4308_0 w3lib 1.21.0 pyhd3eb1b0_0 watchdog 2.1.6 py39h06a4308_0 wcwidth 0.2.5 pyhd3eb1b0_0 webencodings 0.5.1 py39h06a4308_1 websocket-client 0.58.0 py39h06a4308_4 werkzeug 2.0.3 pyhd3eb1b0_0 wget 1.21.3 h0b77cf5_0 wheel 0.37.1 pyhd3eb1b0_0 widgetsnbextension 3.5.2 py39h06a4308_0 wrapt 1.12.1 py39he8ac12f_1 wurlitzer 3.0.2 py39h06a4308_0 xarray 0.20.1 pyhd3eb1b0_1 xlrd 2.0.1 pyhd3eb1b0_0 xlsxwriter 3.0.3 pyhd3eb1b0_0 xz 5.2.5 h7b6447c_0 yaml 0.2.5 h7b6447c_0 yapf 0.31.0 pyhd3eb1b0_0 yarl 1.6.3 py39h27cfd23_0 zeromq 4.3.4 h2531618_0 zfp 0.5.5 h295c915_6 zict 2.0.0 pyhd3eb1b0_0 zipp 3.7.0 pyhd3eb1b0_0 zlib 1.2.12 h7f8727e_2 zope 1.0 py39h06a4308_1 zope.interface 5.4.0 py39h7f8727e_0 zstd 1.4.9 haebb681_0 . Conda Packages . echo Conda Check # test for a kernel installation test=&quot;jupyter&quot; # keyword check=`conda list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . Conda Check jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 . Jupyter Checks . jupyter --version jupyter kernelspec list . Selected Jupyter core packages... IPython : 8.2.0 ipykernel : 6.9.1 ipywidgets : 7.6.5 jupyter_client : 6.1.12 jupyter_core : 4.9.2 jupyter_server : 1.13.5 jupyterlab : 3.3.2 nbclient : 0.5.13 nbconvert : 6.4.4 nbformat : 5.3.0 notebook : 6.4.8 qtconsole : 5.3.0 traitlets : 5.1.1 Available kernels: bash /home/reem57/.local/share/jupyter/kernels/bash java /home/reem57/.local/share/jupyter/kernels/java javascript /home/reem57/.local/share/jupyter/kernels/javascript python3 /home/reem57/anaconda3/share/jupyter/kernels/python3 . test=&quot;python3&quot; # keyword check=`jupyter kernelspec list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . python3 /home/reem57/anaconda3/share/jupyter/kernels/python3 .",
            "url": "https://reem57.github.io/blog_new/jupyter/2022/08/26/InstallingChecks.html",
            "relUrl": "/jupyter/2022/08/26/InstallingChecks.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Cloning code",
            "content": "echo &quot;Using conditional statement to create a project directory and project&quot; # Variable section export project_dir=$HOME/vscode # change vscode to different name to test git clone export project=$project_dir/APCSP # change APCSP to name of project from git clone export project_repo=&quot;https://github.com/nighthawkcoders/APCSP.git&quot; # change to project of choice cd ~ # start in home directory # Conditional block to make a project directory if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... makinng directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; # Conditional block to git clone a project from project_repo if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . Using conditional statement to create a project directory and project Directory /home/reem57/vscode exists. Directory /home/reem57/vscode/APCSP exists. .",
            "url": "https://reem57.github.io/blog_new/jupyter/2022/08/25/CSPClone.html",
            "relUrl": "/jupyter/2022/08/25/CSPClone.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Week 0",
            "content": "Hack 1 . Insight . Java . . Python . . Hack 2 . Java project . .",
            "url": "https://reem57.github.io/blog_new/markdown/2022/08/19/week0.html",
            "relUrl": "/markdown/2022/08/19/week0.html",
            "date": " • Aug 19, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Python",
            "content": "print(&quot;hello world&quot;) . hello world .",
            "url": "https://reem57.github.io/blog_new/jupyter/2022/08/19/python0.html",
            "relUrl": "/jupyter/2022/08/19/python0.html",
            "date": " • Aug 19, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Java",
            "content": "System.out.println(&quot;hello world&quot;) . hello world .",
            "url": "https://reem57.github.io/blog_new/jupyter/2022/08/19/java0.html",
            "relUrl": "/jupyter/2022/08/19/java0.html",
            "date": " • Aug 19, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://reem57.github.io/blog_new/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  

  

  
      ,"page3": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://reem57.github.io/blog_new/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  
      ,"page8": {
          "title": "Space",
          "content": "",
          "url": "https://reem57.github.io/blog_new/space/",
          "relUrl": "/space/",
          "date": ""
      }
      
  

  

  
  

  
  

  
  

  
      ,"page13": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://reem57.github.io/blog_new/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}